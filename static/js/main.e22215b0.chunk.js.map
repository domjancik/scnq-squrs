{"version":3,"sources":["firebaseConfig.ts","Help/Credit.tsx","Button/Button.tsx","Help/Help.tsx","Help/helpContent.ts","Intro/Intro.tsx","Squr/ConfigContext.ts","Squr/ConfigContextProvider.tsx","Squr/EmptySqur.tsx","Squr/useAnimationFrame.ts","Visualizer/Visualizer.tsx","Squr/instruments/Expression/ExpressionContent.tsx","Squr/functions.ts","Squr/notes.ts","Squr/instruments/Expression/useExpressionWithSound.ts","Squr/instruments/Sequencer/SequencerContent.tsx","Squr/instruments/index.ts","Squr/instruments/Sequencer/useExpressionSequencer.ts","Squr/flipside/menu/uesInstrumentMenuItem.ts","Squr/events/setExpression.ts","Squr/flipside/menu/useCloneMenuItem.ts","Squr/events/clone.ts","Squr/flipside/menu/MenuContent.tsx","Squr/flipside/useFlipside.ts","Squr/useSetExpressionEventListener.ts","Squr/Squr.tsx","Squr/squrCommon.ts","Squr/PersistentSqur.tsx","Squr/makeSqurs.tsx","Squr/TimeContext.tsx","Squr/store/useLocalStorageState.ts","Squr/store/useLocalStoragePersistence.ts","Squr/useQueryParamsConfig.ts","Squr/store/useFirebasePersistence.ts","useTime.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","cssCredit","css","Credit","href","target","cssSqur","Button","children","rest","cssHelp","cssHelpContent","cssHelpNavigation","variables","title","value","functions","renderHelpItems","items","itemElements","map","PAGES","intro","ClosedHelpButtons","setOpen","onClick","OpenedHelpButtons","setPage","Help","useState","open","page","helpContent","cssIntro","cssMargin","Intro","ConfigContext","createContext","volume","ConfigContextProvider","useRef","useEffect","window","setVolume","newVolume","current","Provider","sqr","side","width","height","EmptySqur","palette","onContextMenu","style","position","borderRadius","padding","boxSizing","boxShadow","useAnimationFrame","callback","requestRef","React","previousTimeRef","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualizer","values","Array","fill","valuesState","setValuesState","v","slice","length","push","path","val","index","Math","abs","join","viewBox","preserveAspectRatio","d","strokeWidth","stroke","vectorEffect","cssExtra","ExpressionContent","expression","setExpression","res","fontColor","fontFamily","border","background","color","fontWeight","transition","maxWidth","minWidth","minHeight","maxHeight","onChange","e","fontSize","normalizedSin","x","sin","PI","normalizedTriangle","normalizedSquare","phase","invert","lerp","from","to","alpha","normalizedStep","len","pos","floor","C","F","G","Bb","SCALE_5_BLUES_MAJOR_RITSUSEN","SCALES","notes","sqursSetScale","scale","console","log","sqursListScales","forEach","getNote","i","note","octave","useExpressionWithSound","useContext","setRes","_time","resRef","lastValidCompiled","parseError","compile","frequency","Tone","toFrequency","osc","type","detune","random","toDestination","start","dispose","loop","exprEvalRes","t","tri","stp","inv","max","min","isNaN","volumeTarget","Infinity","rampTo","error","instrumentName","ACTIVE_COLOR","SequencerToggle","active","label","bg","fg","SequencerContent","INSTRUMENTS","gridseq","view","extra","currentStep","step","steps","split","str","toggleStep","stepIndex","updatedSteps","setStep","toggleSide","toggles","textAlign","logic","mappedSteps","synth","loopA","round","playing","triggerAttackRelease","expsyn","useInstrumentMenuItem","setView","setLogic","Object","keys","action","setLogicAndView","SET_EXPRESSION_EVENT_NAME","condition","element","event","CustomEvent","detail","bubbles","createSetExpressionEvent","document","dispatchEvent","useCloneMenuItem","undefined","cloneToAll","row","cloneToRow","y","column","cloneToColumn","MenuContent","props","setPath","menu","selectedMenu","reduce","subMenu","selectedSubMenu","handleMenuItemClick","menuItem","useFlipside","baseContent","isFlipped","setIsFlipped","handleFlip","flipped","ContentComponent","useSetExpressionEventListener","listener","evalExpr","parse","addEventListener","removeEventListener","useExternalIfDefined","init","external","setExternal","internal","setInternal","cssFlipButton","Squr","a","set","off","on","expressionExternal","setExpressionExternal","contentComponent","useExpressionHookExternal","useExpressionHook","logicExternal","setLogicExternal","viewExternal","setViewExternal","useLogic","View","resBase","touching","setTouching","black","onTouchStart","DEFAULT_EXPRESSION","DEFAULT_LOGIC","DEFAULT_VIEW","PersistentSqur","storageKey","usePersistenceHook","isError","key","getSqurKey","makeSqurs","resolution","room","sqursPerRow","squrCount","sideSize","getXIndex","perRow","getYIndex","squrs","_v","i1","x1","y1","TimeContext","getItem","defaultItem","item","localStorage","useLocalStorageState","state","setState","interval","setInterval","currentItem","clearInterval","setItem","useLocalStoragePersistence","STORES","firebase","ref","useDatabase","useDatabaseObjectData","data","status","localExpression","setLocalExpression","localLogic","setLocalLogic","localView","setLocalView","makeSetStateAndFirebase","setLocal","firebaseField","newValue","update","expr","local","useQueryParamsConfig","search","location","useMemo","searchParams","URLSearchParams","storeParam","get","store","useTime","setTime","ut","App","started","setStarted","config","display","alignItems","justifyContent","gridTemplateColumns","gap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oLAWeA,G,MAXQ,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YACE,oEACFC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,cACnBC,MAAO,6C,wBCHHC,EAAYC,YAAH,+HAsBAC,I,EAAAA,EAZf,WACE,OACE,mBAAKD,IAAKD,EAAV,UACE,iBAAGG,KAAK,mBAAmBC,OAAO,SAAlC,kBAGA,qBAJF,W,8BCNEC,EAAUJ,YAAH,4VAyBEK,I,MAAAA,EARf,YAA6D,IAA3CC,EAA0C,EAA1CA,SAAaC,EAA6B,iBAC1D,OACE,8CAAQP,IAAKI,GAAaG,GAA1B,aACGD,M,SCvBDE,EAAUR,YAAH,oGAOPS,EAAiBT,YAAH,yHAOdU,EAAoBV,YAAH,oDASjBW,EAAwB,CAC5B,CACEC,MAAO,IACPC,MAAO,gBAET,CACED,MAAO,IACPC,MAAO,mDAET,CACED,MAAO,IACPC,MAAO,yCAET,CACED,MAAO,IACPC,MAAO,0CAILC,EAAwB,CAC5B,CACEF,MAAO,SACPC,MAAO,4CAET,CACED,MAAO,SACPC,MAAO,gDAET,CACED,MAAO,iBACPC,MAAO,+CAET,CACED,MAAO,uBACPC,MAAO,wCAILE,EAAkB,SAACC,GACvB,IAAMC,EAAeD,EAAME,KAAI,gBAAGN,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAC7B,4BACE,gCAASD,EAAT,OADF,IAC6BC,IADpBD,EAAQC,MAInB,OAAO,2BAAKI,KAGRE,EAAQ,CACZC,MAAO,kBAAM,YAAC,IAAD,UC/EO,uRDgFpBT,UAAW,kBACT,2BACE,yCACCI,EAAgBJ,OAGrBG,UAAW,kBACT,2BACE,yCACCC,EAAgBD,QASvB,SAASO,EAAT,GAAyE,IAA5CC,EAA2C,EAA3CA,QAC3B,OAAO,YAAC,EAAD,CAAQC,QAAS,kBAAMD,GAAQ,IAA/B,8BAGT,SAASE,EAAT,GAMI,IALFF,EAKC,EALDA,QACAG,EAIC,EAJDA,QAKA,OACE,2BACE,YAAC,EAAD,CAAQF,QAAS,kBAAME,EAAQ,UAA/B,mBACA,YAAC,EAAD,CAAQF,QAAS,kBAAME,EAAQ,cAA/B,uBACA,YAAC,EAAD,CAAQF,QAAS,kBAAME,EAAQ,cAA/B,uBACA,YAAC,EAAD,CAAQF,QAAS,kBAAMD,GAAQ,IAA/B,wBAyBSI,I,IAAAA,EApBf,WACE,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaN,EAAb,KACA,EAAwBK,mBAAe,SAAvC,mBAAOE,EAAP,KAAaJ,EAAb,KAEMK,EAAc,mBAAK9B,IAAKS,EAAV,SAA2BU,EAAMU,OAErD,OACE,mBAAK7B,IAAKQ,EAAV,UACE,mBAAKR,IAAKU,EAAV,SACGkB,EACC,YAACJ,EAAD,CAAmBF,QAASA,EAASG,QAASA,IAE9C,YAACJ,EAAD,CAAmBC,QAASA,MAG/BM,GAAQE,MEzHTC,EAAW/B,YAAH,oEAKRgC,EAAYhC,YAAH,gDAwBAiC,MAhBf,YAAkD,IAAjCV,EAAgC,EAAhCA,QACf,OACE,mBAAKvB,IAAK+B,EAAV,UACE,qCACA,4BACE,YAAC,EAAD,CAAQR,QAASA,EAAjB,+CAEF,mBAAKvB,IAAKgC,EAAV,SACE,8BACE,YAAC,IAAD,UA5BgB,wHCDXE,EAJOC,wBAEnB,CAAEC,OAAQ,O,QCsBEC,MAnBf,YAAmE,IAAlC/B,EAAiC,EAAjCA,SACzB8B,EAASE,iBAAO,GAWtB,OATAC,qBAAU,WAGR,OADAC,OAAOC,UAAY,SAACC,GAAD,OAAwBN,EAAOO,QAAUD,GACrD,kBAEEF,OAAOC,aAEf,IAGD,cAAC,EAAcG,SAAf,CAAwB/B,MAAO,CAAEuB,OAAQA,GAAzC,SACG9B,K,gDCbDuC,EAAM,SAACC,GAAD,MAA4B,CACtCC,MAAOD,EACPE,OAAQF,IAmCKG,MAhCf,YAUoB,IATlBC,EASiB,EATjBA,QACA5C,EAQiB,EARjBA,SACAwC,EAOiB,EAPjBA,KACAK,EAMiB,EANjBA,cACG5C,EAKc,iBACjB,OACE,6CACE4C,cAAeA,EACfC,MAAK,uCACA,CACDC,SAAU,WACVC,aAAc,QACdC,QAAS,QACTC,UAAW,aACXC,UAAW,8BAEVZ,EAAIC,IACJI,IAED3C,GAbN,aAeGD,MChBQoD,G,YAtBW,SAACC,GAGzB,IAAMC,EAAaC,IAAMvB,SACnBwB,EAAkBD,IAAMvB,SAExByB,EAAU,SAAVA,EAAWC,GACf,GAAMF,EAAgBnB,QAAS,CAC7B,IAAMsB,EAAYD,EAAOF,EAAgBnB,QACzCgB,EAASM,GAEXH,EAAgBnB,QAAUqB,EAC1BJ,EAAWjB,QAAUuB,sBAAsBH,IAG7CF,IAAMtB,WAAU,WAEd,OADAqB,EAAWjB,QAAUuB,sBAAsBH,GACpC,kBAAMI,qBAAqBP,EAAWjB,YAE5C,MCyBUyB,I,EAAAA,EAvCf,YAAqD,IAA/BvD,EAA8B,EAA9BA,MACdwD,EAAS/B,iBAAiBgC,MAAM,IAAIC,KAAK,IAC/C,EAAsC5C,mBAAS0C,EAAO1B,SAAtD,mBAAO6B,EAAP,KAAoBC,EAApB,KAEMC,EAAIpC,iBAAO,GACjBoC,EAAE/B,QAAU9B,EAEZ6C,GAAkB,WAChBW,EAAO1B,QAAU0B,EAAO1B,QAAQgC,MAAM,EAAGN,EAAO1B,QAAQiC,QACxDP,EAAO1B,QAAQkC,KAAKH,EAAE/B,SACtB8B,EAAeJ,EAAO1B,YAGxB,IAAMmC,EAAON,EACVtD,KACC,SAAC6D,EAAKC,GAAN,iBAA4B,EAARA,EAApB,YAAiC,KAA8B,IAAtBC,KAAKC,IAAIH,IAAQ,GAAU,OAErEI,KAAK,KAER,OACE,qBAAK/B,MAAO,CAAEL,MAAO,QAArB,SACE,qBACEC,OAAO,KACPD,MAAM,OACNqC,QAAQ,aACRC,oBAAoB,OAJtB,SAME,sBACEC,EAAC,gBAAWR,GACZS,YAAY,IACZC,OAAO,eACPjB,KAAK,OACLkB,aAAa,4BCnBjBC,EAAW1F,YAAH,0GAqDC2F,MA7Cf,YAKgC,IAJ9BC,EAI6B,EAJ7BA,WACAC,EAG6B,EAH7BA,cACAC,EAE6B,EAF7BA,IACAC,EAC6B,EAD7BA,UAEA,OACE,2BACE,wBACE3C,MAAO,CACL4C,WAAY,4BACZ1C,aAAc,QACdC,QAAS,QACTC,UAAW,aACXyC,OAAQ,OACRlD,MAAO,OACPU,UAAW,2BACXyC,WAAY,cACZC,MAAOJ,EACPK,WAAY,OACZC,WAAY,YACZC,SAAU,OACVC,SAAU,OACVC,UAAW,MACXC,UAAW,QAEb5F,MAAO+E,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAcc,EAAExG,OAAOU,UAE1C,mBAAKb,IAAK0F,EAAUtC,MAAO,CAAE+C,MAAOJ,EAAWa,SAAU,SAAzD,SACE,YAAC,EAAD,CAAY/F,MAAOiF,U,QCvDrBe,GAAgB,SAACC,GAAD,OAAe7B,KAAK8B,IAAID,EAAI7B,KAAK+B,GAAK,GAAK,EAAI,IAO/DC,GAAqB,SAACH,GAAD,OACzBA,EAAI,EAAI,GAAOA,EAAI,EAAK,EAAI,EAAsB,GAAhBA,EAAI,EAAK,KAEvCI,GAAmB,SAACJ,GAAD,IAAYK,EAAZ,uDAA4B,GAA5B,OACvBL,EAAI,EAAIK,EAAQ,EAAI,GAEhBC,GAAS,SAACN,GAAD,OAAe,EAAIA,GAE5BO,GAAO,SAACC,EAAcC,GAAf,IAA2BC,EAA3B,uDAA2C,GAA3C,OACXF,EAAOF,GAAOI,GAASD,EAAKC,GAExBC,GAAiB,SAACpE,GACtB,IAAMqE,EAAG,yCACHC,EAAM1C,KAAK2C,MAAMvE,EAAWqE,GAAOA,EACzC,OAAaC,EAAb,uBAAaA,EAAb,mBAAaA,EAAb,ICfIE,GAAI,IAIJC,GAAI,IACJC,GAAI,IAIJC,GAAK,KAOLC,GAA+B,CAACJ,GAf5B,IAekCC,GAAGC,GAVrC,KAkBJG,GAAsB,CAC1B,CACEtH,MAAO,uBACPuH,MAd6B,CAACN,GAZxB,IACA,IAWiCE,GAPjC,MAuBR,CACEnH,MAAO,yBACPuH,MAjB+B,CAACN,GAb1B,IAagCC,GAAGC,GAAGC,KAmB9C,CACEpH,MAAO,2BACPuH,MAAOF,IAET,CACErH,MAAO,2BACPuH,MAxBiC,CAACN,GAZ3B,KAYkCC,GARlC,KAQyCE,KA0BlD,CACEpH,MAAO,6BACPuH,MA1B6B,CAACN,GAdvB,KAc8BC,GAAGC,GAAGC,KA4B7C,CACEpH,MAAO,+BACPuH,MA7BqC,CAZ/B,IAIC,KARD,IASC,QAwCPA,GAAQF,GAEZzF,OAAO4F,cAAgB,SAACpD,GACtB,IAAMqD,EAAQH,GAAOlD,EAAQkD,GAAOtD,QACpC0D,QAAQC,IAAR,4BAAiCF,EAAMzH,QACvCuH,GAAQE,EAAMF,OAGhB3F,OAAOgG,gBAAkB,WACvBN,GAAOO,SAAQ,WAAmBzD,GAAnB,IAAGpE,EAAH,EAAGA,MAAOuH,EAAV,EAAUA,MAAV,OACbG,QAAQC,IAAR,UAAevD,EAAf,aAAyBpE,EAAzB,cAAoCuH,QAIxC,IAAMO,GAAU,SAACC,GACf,IAAMC,EAAOT,GAAMQ,EAAIR,GAAMvD,QACvBiE,EAAS5D,KAAK2C,MAAMe,EAAIR,GAAMvD,QACpC,MAAM,GAAN,OAAUgE,GAAV,OAAiBC,EAAS,IC+BbC,GA3FwC,SACrDlD,EACAC,EACAlF,GAEA,IAAQyB,EAAW2G,qBAAW7G,GAAtBE,OACR,EAAsBT,mBAAS,GAA/B,mBAAOmE,EAAP,KAAYkD,EAAZ,KAEAtF,GAAkB,SAACuF,GAEjBD,EAAOE,EAAOvG,YAGhB,IAAMwG,EAAoB7G,kBAAiC,WACzD,MAAO,MAEH8G,EAAa9G,iBAAmB,MAEtCC,qBAAU,WACR,IACE4G,EAAkBxG,QAAU0G,YAAQzD,GACpCwD,EAAWzG,QAAU,KACrB,MAAOgE,GACPyC,EAAWzG,QAAUgE,KAEtB,CAACf,IAGJ,IDmCwB+C,ECnClBO,EAAS5G,iBAAO,GAIhBgH,GD+BkBX,GC/BoB,OAAThI,QAAS,IAATA,OAAA,EAAAA,EAAWgI,IAAK,ED+BbY,IAAeb,GAAQC,IAAIa,eC9BjEjH,qBAAU,WAUR,OATAkH,EAAI9G,QAAU,IAAI4G,IAAgB,CAChCD,YACAI,KAAM,OACNtH,QAAS,GACTuH,OAAwB,GAAhB1E,KAAK2E,SAAgB,KAE5BC,gBACAC,QAEI,WAAO,IAAD,EACX,UAAAL,EAAI9G,eAAJ,SAAaoH,aAEd,CAACT,IAEJ,IAAMG,EAAMnH,iBAA+B,MAoC3C,OAnCAC,qBAAU,WACR,IAEMyH,EAAO,IAAIT,KAAU,SAACvF,GAC1B,IAHa8C,EAGPmD,EAAcd,EAAkBxG,QAAlB,aAClBqB,OACAkG,EAAGlG,EACH+C,IAAKF,GACLsD,IAAKlD,GACLpE,IAAKqE,GACLkD,IAAK3C,GACL4C,IAAKjD,IACFzG,IAIL,GAFAuI,EAAOvG,QAAiC,kBAAhBsH,GAbXnD,EAa4CmD,EAb9BhF,KAAKqF,IAAIrF,KAAKsF,IAAIzD,EAAG,IAAK,IAamB,GAEpE0D,MAAMtB,EAAOvG,UAAa8G,EAAI9G,SAAYP,EAA9C,CACA,IAAMqI,EACe,IAAnBvB,EAAOvG,SACF+H,IACDrD,IAAM,GAAIA,IAAM,IAAK,GAAIjF,EAAOO,SAAUsC,KAAKC,IAAIgE,EAAOvG,UAE5D8G,EAAI9G,UACN8G,EAAI9G,QAAQP,OAAOuI,OAAOF,EAAc,IAAMzG,GAC9CyF,EAAI9G,QAAQ+G,KAAOR,EAAOvG,SAAW,EAAI,OAAS,aAEnD,QAAQmH,MAAM,GAEjB,OAAO,WAAO,IAAD,EACX,UAAAL,EAAI9G,eAAJ,SAAaoH,UACbC,EAAKD,aAEN,IAGI,CACLjE,IAAKb,KAAKC,IAAIY,GACd8E,MAAOxB,EAAWzG,QAClBkI,eAAgB,W,SCpGdC,GAAe,OAMrB,SAASC,GAAT,GAYI,IAXFjF,EAWC,EAXDA,IACAjF,EAUC,EAVDA,MACAU,EASC,EATDA,QACAuB,EAQC,EARDA,KACAkI,EAOC,EAPDA,OAQIC,EAAQ,IACRpK,GAAS,KAAKoK,EAAQ,KACtBpK,GAAS,IAAGoK,EAAQ,KAExB,IAAMC,EAAKF,EAASF,GAtBI,cAwBlBK,EAAKH,EAtBW,QAqBHlF,EAAM,GApBM,kBAFPgF,OAyBxB,OACE,cAAC,EAAD,CACEvJ,QAASA,EACT6B,MAAO,CACLL,MAAOD,EACPE,OAAQF,EACRoD,WAAYgF,EACZ/E,MAAOgF,EACP7H,aAAc,QAPlB,SAUG2H,IAkDQG,IC/ETC,GAA8C,CAClDC,QAAS,CACPC,KDgCJ,YAMgC,IAL9BzF,EAK6B,EAL7BA,IACAF,EAI6B,EAJ7BA,WACAC,EAG6B,EAH7BA,cACA/C,EAE6B,EAF7BA,KACA0I,EAC6B,EAD7BA,MAEMC,GAAmB,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOE,OAAQ,EAQ7BC,EALc/F,EAAWgG,MAAM,KAAK1K,KAAI,SAAC2K,GAC7C,IAAM9G,GAAO8G,EACb,OAAOrB,MAAMzF,GAAO,EAAIA,MAGG,CAAC,GAQxB+G,EAAa,SAACC,IANJ,SAACA,EAAmBlL,GAClC,IAAMmL,EAAY,aAAOL,GACzBK,EAAaD,GAAalL,EAC1BgF,EAAcmG,EAAa7G,KAAK,MAKhC8G,CAAQF,GADKJ,EAAMI,GACQ,IAAO,MAG9BG,EAAU,eAAWpJ,EAAX,eACVqJ,EAAUR,EAAMzK,KAAI,SAACwK,EAAM1G,GAC/B,OACE,cAAC+F,GAAD,CACEjF,IAAKA,EACLkF,OAAQS,IAAgBzG,EACxBlC,KAAMoJ,EAENrL,MAAO6K,EACPnK,QAAS,kBAAMuK,EAAW9G,KAFrBA,MAOX,OAAO,qBAAK5B,MAAO,CAAEgJ,UAAW,UAAzB,SAAsCD,KCzE3CE,MCXmD,SACrDzG,EACAC,EACAlF,GAEA,IAAMgL,EAAQrJ,iBAAiB,CAAC,IAChC,EAAwBX,mBAAS,GAAjC,mBAAO+J,EAAP,KAAaO,EAAb,KAEA1J,qBAAU,WACR,IAAM+J,EAAc1G,EAAWgG,MAAM,KAAK1K,KAAI,SAAC2K,GAC7C,IAAM9G,GAAO8G,EACb,OAAOrB,MAAMzF,GAAO,EAAIA,KAG1B4G,EAAMhJ,QAAU2J,GAAe,CAAC,GAC5BX,EAAMhJ,QAAQiC,OAAS,IACzBiB,EAAc,qCAEf,CAACD,EAAYC,IAEhB,MAAsBlE,mBAAS,GAA/B,mBAAOmE,EAAP,KAAYkD,EAAZ,KAEMuD,EAAQjK,iBAA0B,MA4BxC,OA3BAC,qBAAU,WACRgK,EAAM5J,SAAU,IAAI4G,KAAaM,gBACjC0C,EAAM5J,QAAQP,OAAOuI,QAAQ,GAAI,GAEjC,IAAM6B,EAAQ,IAAIjD,KAAU,SAACvF,GAAU,IAAD,EAC9B+H,EAAY9G,KAAKwH,MAAa,EAAPzI,GAAY2H,EAAMhJ,QAAQiC,OACjD6G,EAAcE,EAAMhJ,QAAQoJ,GAClCE,EAAQF,GAER,IAAMW,EAAUjB,GAAexG,KAAK2E,SAEpCZ,EAAO0D,EAAU,EAAI,GAEjBA,IACF,UAAAH,EAAM5J,eAAN,SAAegK,qBACbjE,IAAiB,OAAT/H,QAAS,IAATA,OAAA,EAAAA,EAAWgI,IAAK,GACxB,KACA3E,MAEH,MAAM8F,MAAM,GAEf,OAAO,WAAO,IAAD,EACX,UAAAyC,EAAM5J,eAAN,SAAeoH,UACfyC,EAAMzC,aAEP,IAEI,CAAEjE,MAAK8E,MAAO,KAAMC,eAAgB,YAAaW,MAAO,CAAEE,WDrCjEkB,OAAQ,CACNrB,KAAM5F,EACN0G,MAAOvD,KECI+D,OAjBf,YAA+E,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,SAWxC,MAAO,CACLnM,MAAO,cACPN,SAPkB0M,OAAOC,KAAK5B,IAAanK,KAAI,SAAC2J,GAAD,MAAqB,CACpEjK,MAAOiK,EACPqC,OAAQ,kBAPc,SAACrC,GACvBkC,GAAYA,EAASlC,GACrBiC,GAAWA,EAAQjC,GAKLsC,CAAgBtC,UCV5BuC,GAA4B,gBA2BnBvH,GAZO,SACpBD,EACAyH,EACAC,GAEA,IAAMC,EAlByB,SAC/B3H,EACAyH,GAF+B,OAK/B,IAAIG,YAAsCJ,GAA2B,CACnEK,OAAQ,CACN7H,aACAyH,aAEFK,SAAS,IAQGC,CAAyB/H,EAAYyH,IAE9B,OAAGC,QAAH,IAAGA,IAAWM,UAEnBC,cAAcN,ICFjBO,OApBf,YAA8E,IAAlDnN,EAAiD,EAAjDA,UAAWiF,EAAsC,EAAtCA,WACrC,MAAO,CACLhF,MAAO,aACPN,SAAU,CACR,CACEM,MAAO,SACPsM,OAAQ,kBCAG,SAACtH,EAAoB0H,GACtCzH,GAAcD,OAAYmI,EAAWT,GDDjBU,CAAWpI,KAE3B,CACEhF,MAAO,SACPsM,OAAQ,kBCsBG,SAACtH,EAAoBqI,EAAaX,GACnDzH,GAAcD,EAAD,gBAAsBqI,GAAOX,GDvBtBY,CAAWtI,GAAqB,OAATjF,QAAS,IAATA,OAAA,EAAAA,EAAWwN,IAAK,KAEvD,CACEvN,MAAO,YACPsM,OAAQ,kBCGM,SACpBtH,EACAwI,EACAd,GAEAzH,GAAcD,EAAD,gBAAsBwI,GAAUd,GDRzBe,CAAczI,GAAqB,OAATjF,QAAS,IAATA,OAAA,EAAAA,EAAWmG,IAAK,QEsBjDwH,OAjCf,SAAqBC,GAEnB,MAAwB5M,mBAAmB,IAA3C,mBAAOmD,EAAP,KAAa0J,EAAb,KAEMC,EAAO,CAAC5B,GAAsB0B,GAAQT,GAAiBS,IAEvDG,EAAe5J,EAAK6J,QAAO,SAACC,EAAS5J,GACzC,IAAM6J,EAAkBD,EAAQ5J,GAChC,OAAI6J,EAAgBvO,SACXuO,EAAgBvO,SAElBsO,IACNH,GAEGK,EAAsB,SAACC,EAAoB/J,GAArB,OAAuC,WAC7D+J,EAASzO,SACXkO,GAAQ,SAAC1J,GAAD,6BAAcA,GAAd,CAAoBE,OAI1B+J,EAAS7B,QACX6B,EAAS7B,WAKb,OAAOwB,EAAaxN,KAAI,SAAC6N,EAAU/J,GAAX,OACtB,cAAC,EAAD,CAA6BzD,QAASuN,EAAoBC,EAAU/J,GAApE,SACG+J,EAASnO,OADCmO,EAASnO,WChBXoO,OAdf,SAAqBC,GACnB,MAAkCtN,oBAAS,GAA3C,mBAAOuN,EAAP,KAAkBC,EAAlB,KAOA,MAAO,CACLC,WAPiB,WACjBD,GAAa,SAACE,GAAD,OAAcA,MAO3BC,iBAJuBJ,EAAYZ,GAAcW,ICiBtCM,I,GAAAA,GAtBf,SACE1J,GAEC,IADDlF,EACA,uDADuC,GAEvC4B,qBAAU,WACR,IAAMiN,EAAW,SAAC7I,GAChB,IAEA,EAF2BA,EAE0B8G,OAA7CJ,EAAR,EAAQA,UAAWzH,EAAnB,EAAmBA,WAEdyH,IAAaoC,YAASC,YAAMrC,GAAY1M,IAC3CkF,EAAcD,IAKlB,OAFApD,OAAOmN,iBAAiB,gBAAiBH,GAElC,WACLhN,OAAOoN,oBAAoB,gBAAiBJ,MAE7C,CAAC3J,EAAelF,KC6CrB,SAASkP,GACPC,EACAC,EACAC,GAEA,MAAgCrO,mBAASmO,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAIA,MAAO,CAHI,OAAGH,QAAH,IAAGA,IAAYE,EACZ,OAAGD,QAAH,IAAGA,IAAeE,GAKlC,IAAMC,GAAgBnQ,YAAH,2IAwFJoQ,OAhFf,YAY4B,EAX1BN,KAW2B,IApDfO,EAOZ1N,EACA2N,EACAC,EACAC,EA0C0B,IAV1B1N,YAU0B,MAVnB,IAUmB,EATd2N,EASc,EAT1B7K,WACe8K,EAQW,EAR1B7K,cAQ0B,IAP1BlF,iBAO0B,MAPd,GAOc,EAN1BgQ,EAM0B,EAN1BA,iBACmBC,EAKO,EAL1BC,kBACOC,EAImB,EAJ1BzE,MACU0E,EAGgB,EAH1BhE,SACMiE,EAEoB,EAF1BzF,KACS0F,EACiB,EAD1BnE,QAEA,EAAoC+C,GAClC,IACAY,EACAC,GAHF,mBAAO9K,EAAP,KAAmBC,EAAnB,KAKA,EAA0BgK,GACxB,SACAiB,EACAC,GAHF,mBAAO1E,EAAP,KAAcU,EAAd,KAKA,EAAwB8C,GACtB,SACAmB,EACAC,GAHF,mBAAO1F,EAAP,KAAauB,EAAb,KAMeoE,GAAa7F,GAAYgB,IAAU,CAChDA,MAAOvD,KADDuD,MAGM8E,GAAS9F,GAAYE,IAAS,CAAEA,KAAM5F,IAA5C4F,KAGR,EAAyCyD,GADtB,OAAG2B,QAAH,IAAGA,IAAoBQ,GAClC7B,EAAR,EAAQA,iBAAkBF,EAA1B,EAA0BA,WAK1B,GAFuB,OAAGwB,QAAH,IAAGA,IAA6BM,GAMjCtL,EAAYC,EAAelF,GAH1CyQ,EADP,EACEtL,IACA8E,EAFF,EAEEA,MACAY,EAHF,EAGEA,MAEF,EAAgC7J,mBAAS,GAAzC,mBAAO0P,EAAP,KAAiBC,EAAjB,KAEMxL,EAAMsL,EACNrL,EAAYD,EAAMuL,EAAW,GAAM,OAAS,OAC5CnO,EAAU4C,EAAMuL,EAAW,GAzFrBhB,EAyF8BvK,EAzFf,CAAEI,WAAW,QAAD,OATvB,gBASuB,aAAwBmK,EAAxB,OAC3B,SAACA,GAAD,MAAgB,CAAEnK,WAAW,eAAD,OAAiBmK,EAAjB,MAwFSkB,EAAOzL,GAIxD,OAFAyJ,GAA8B1J,EAAelF,GAG3C,YAAC,EAAD,yBACEuC,QAASA,EACTJ,KAAMA,IAzFVH,EA0FoB0O,EAzFpBf,EAyF8BgB,EAxF9Bf,EAwF2C,EAvF3CC,EAuF8C,EAtF1C,CAEJgB,aAAc,kBAAwBlB,EAAjB3N,IAAY6N,EAASD,EAAWC,OAiFnD,cAKE,YAAClB,EAAD,CACExM,KAAMA,EACN8C,WAAYA,EACZC,cAAeA,EACfC,IAAKA,EACLC,UAAWA,EACXpF,UAAWA,EACXiK,MAAOA,EACPyB,MAAOA,EACPU,SAAUA,EACVxB,KAAMA,EACNuB,QAASA,EACTtB,MAAOA,IAET,YAAC,EAAD,CAAQxL,IAAKmQ,GAAe5O,QAAS6N,EAArC,uBChKAqC,I,MAAqB,UACrBC,GAAgB1E,OAAOC,KAAK5B,IAAa,GACzCsG,GAAe3E,OAAOC,KAAK5B,IAAa,G,8CC6C/BuG,OAnCf,YAKuC,IAAD,IAJpC9O,YAIoC,MAJ7B,IAI6B,MAHpC+O,kBAGoC,MAHvB,QAGuB,EAFpCC,EAEoC,EAFpCA,mBACGvR,EACiC,kBACpC,EACEuR,EAAmBD,GADbjM,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAAewG,EAAnC,EAAmCA,MAAOU,EAA1C,EAA0CA,SAAUxB,EAApD,EAAoDA,KAAMuB,EAA1D,EAA0DA,QAG1D,GAHA,EAAmEiF,QAIjE,OACE,cAAC,EAAD,CAAWjP,KAAMA,EAAMI,QAAS,CAAEgD,WAAY,SAA9C,4BAQJ,IAAM8L,ED3BW,eAAkBzG,EAAlB,uDAAyB,OAAzB,uEAAS,QAAT,YAAgDA,GC2BrD0G,CAAW5F,EAAOd,GAC9B,OACE,cAAC,GAAD,aAEEzI,KAAMA,EACN8C,WAAYA,EACZC,cAAeA,EACfwG,MAAOA,EACPU,SAAUA,EACVxB,KAAMA,EACNuB,QAASA,GACLvM,GARCyR,ICQIE,GAxCG,SAChBC,EACAC,EACAN,GAEA,IAAMO,EAAcF,EAGdG,EAAYD,EAFEF,EAGdI,EAAQ,UAAM,GAAKF,EAAX,QAERG,EAAY,SAACxN,GAAD,IAAgByN,EAAhB,uDAAyBJ,EAAzB,OAAyCrN,EAAQyN,GAC7DC,EAAY,SAAC1N,GAAD,IAAgByN,EAAhB,uDAAyBJ,EAAzB,OAChBpN,KAAK2C,MAAM5C,EAAQyN,IAqBrB,MAAO,CACLE,MArBQ,IAAIrO,MAAMgO,GAAW/N,KAAK,GACpBrD,KAAI,SAAC0R,EAAI5N,GACvB,OACE,cAAC,GAAD,CACE8M,mBAAoBA,EAEpBhP,KAAMyP,EACNV,WAAU,WAAMO,EAAN,YAAcpN,GACxBrE,UAAW,CACTgI,EAAG3D,EACH6N,GAAI7N,EAAQ,EACZ8B,EAAG0L,EAAUxN,GACb8N,GAAIN,EAAUxN,GAAS,EACvBmJ,EAAGuE,EAAU1N,GACb+N,GAAIL,EAAU1N,GAAS,IATpBA,MAiBTuN,aCtCES,GAAcnP,IAAM1B,cAAc,G,SCAlC8Q,GAAU,SAACjB,EAAakB,GAC5B,IAAMC,EAAO3Q,OAAO4Q,aAAaH,QAAQjB,GACzC,OAAgB,OAATmB,EAAgBD,EAAcC,GAoCxBE,OA3Bf,SACErB,EACAkB,GAEA,MAA0BvR,oBAAS,kBAAMsR,GAAQjB,EAAKkB,MAAtD,mBAAOI,EAAP,KAAcC,EAAd,KAoBA,OAlBAhR,qBAAU,WACR,IAAMiR,EAAWC,aAAY,WAC3B,IAAMC,EAAcT,GAAQjB,EAAKkB,GAC7BI,IAAUI,GACZH,EAASG,KAEV,KACH,OAAO,WACLC,cAAcH,MAGf,CAACxB,EAAKkB,IAOF,CAACI,EALmB,SAACzS,GAC1B0S,EAAS1S,GA1BG,SAACmR,EAAamB,GAC5B3Q,OAAO4Q,aAAaQ,QAAQ5B,EAAKmB,GA0B/BS,CAAQ5B,EAAKnR,MCNFgT,GAxBwC,SAAChC,GACtD,MAAoCwB,GAAqB,GAAD,OACnDxB,EADmD,eAEtDJ,IAFF,mBAAO7L,EAAP,KAAmBC,EAAnB,KAIA,EAA0BwN,GAAqB,GAAD,OACzCxB,EADyC,UAE5CH,IAFF,mBAAOrF,EAAP,KAAcU,EAAd,KAIA,EAAwBsG,GAAqB,GAAD,OACvCxB,EADuC,SAE1CF,IAFF,mBAKA,MAAO,CACL/L,aACAC,gBACAwG,QACAU,WACAxB,KAVF,KAWEuB,QAXF,OCTIgH,GAAgD,CACpDC,SCEiD,SAAClC,GAClD,IAAMmC,EAAMC,cAAcD,IAAInC,GAE9B,EAAyBqC,YAItBF,GAJKG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAOd,EAA8CzS,wBAC5CoM,GADF,mBAAOsG,EAAP,KAAwBC,EAAxB,KAGA,EAAoC3S,wBAA6BoM,GAAjE,mBAAOwG,EAAP,KAAmBC,EAAnB,KACA,EAAkC7S,wBAA6BoM,GAA/D,mBAAO0G,EAAP,KAAkBC,EAAlB,KAEMC,EACJ,SAACC,EAAqCC,GAAtC,OACA,SAACC,GACCF,EAASE,GACTd,EAAIe,OAAJ,gBAAcF,EAAgBC,MAE5BjP,EAAgB8O,EAAwBL,EAAoB,QAC5DvH,EAAW4H,EAAwBH,EAAe,SAClD1H,EAAU6H,EAAwBD,EAAc,QActD,OAZAnS,qBAAU,WACR,GAAe,YAAX6R,EAAsB,CAAC,IAAD,MAClBY,EAAI,UAAGb,EAAKa,YAAR,QAAgBvD,GACpBpF,EAAK,UAAG8H,EAAK9H,aAAR,QAAiBqF,GACtBnG,EAAI,UAAG4I,EAAK5I,YAAR,QAAgBoG,GACtBqD,IAASX,GAAiBC,EAAmBU,GAC7C3I,IAAUkI,GAAYC,EAAcnI,GACpCd,IAASkJ,GAAWC,EAAanJ,MAGtC,CAAC6I,EAAQD,IAEL,CACLvO,WAAYyO,EACZxO,gBACAwG,MAAOkI,EACPxH,WACAxB,KAAMkJ,EACN3H,YD7CFmI,MAAOpB,IAoBMqB,OAjBf,WAEE,IAAMC,EAAS3S,OAAO4S,SAASD,OAY/B,OAXeE,mBAAQ,WACrB,IAAMC,EAAe,IAAIC,gBAAgBJ,GACnCK,EAAaF,EAAaG,IAAI,UAAY,WAEhD,MAAO,CACLC,MAFY5B,GAAO0B,IAAe3B,GAGlC1B,aAAcmD,EAAaG,IAAI,eAAiB,KAChDrD,KAAMkD,EAAaG,IAAI,SAAW,WAEnC,CAACN,KETSQ,GAPC,WAAuB,IAAtB7F,EAAqB,uDAAN,EAC9B,EAAwBnO,mBAASmO,GAAjC,mBAAO9L,EAAP,KAAa4R,EAAb,KAGA,OAFAlS,GAAkB,SAACM,GAAD,OAAU4R,GAAQ,SAACC,GAAD,OAAQA,EAAK7R,EAAO,UAEjDA,GCwDM8R,OAnDf,WACE,IAAM9R,EAAO2R,KACb,EAA8BhU,oBAAS,GAAvC,mBAAOoU,EAAP,KAAgBC,EAAhB,KACMC,EAASf,KACf,EAA4BG,mBAAQ,WAClC,IAAQlD,EAA4B8D,EAA5B9D,WAAYC,EAAgB6D,EAAhB7D,KAAMsD,EAAUO,EAAVP,MAC1B,OAAOxD,GAAUC,EAAYC,EAAMsD,KAClC,CAACO,IAHItD,EAAR,EAAQA,MAAOJ,EAAf,EAAeA,SAKf,OACE,cAAC,IAAD,CAAqBhT,eAAgBA,EAArC,SACE,cAAC,EAAD,UACE,cAACyT,GAAYpQ,SAAb,CAAsB/B,MAAOmD,EAA7B,SAEE,qBACEZ,MAAO,CACL8S,QAAS,OACTlT,OAAQ,QACRD,MAAO,QACPoT,WAAY,SACZC,eAAgB,UANpB,SASGL,EACC,sBACE3S,MAAO,CACL8S,QAAS,OACTG,oBAAoB,UAAD,OAAYJ,EAAO9D,WAAnB,aAAkCI,EAAlC,KACnB+D,IAAK,SAJT,UAOG3D,EACD,cAAC,EAAD,IACA,cAAC,EAAD,OAGF,cAAC,EAAD,CACEpR,QAAS,WACPyU,GAAW,GACXzM,MACAA,IAAeO,oBCxClByM,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFtJ,SAASuJ,eAAe,SAM1BZ,M","file":"static/js/main.e22215b0.chunk.js","sourcesContent":["const firebaseConfig = {\n  apiKey: 'AIzaSyA6miG1egwhyCpNcBdr-R8P3flUJP8VLj4',\n  authDomain: 'squr-d2ae8.firebaseapp.com',\n  databaseURL:\n    'https://squr-d2ae8-default-rtdb.europe-west1.firebasedatabase.app',\n  projectId: 'squr-d2ae8',\n  storageBucket: 'squr-d2ae8.appspot.com',\n  messagingSenderId: '25610237851',\n  appId: '1:25610237851:web:8b825f5e7ab2363cd2533e',\n}\n\nexport default firebaseConfig\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nimport React from 'react'\n\nconst cssCredit = css`\n  position: fixed;\n  right: 2em;\n  bottom: 2em;\n  color: #abc;\n\n  a {\n    color: #abc;\n  }\n`\nfunction Credit() {\n  return (\n    <div css={cssCredit}>\n      <a href=\"https://domj.net\" target=\"_blank\">\n        domj\n      </a>\n      <br />\n      21-2\n    </div>\n  )\n}\n\nexport default Credit\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nimport React, { ReactElement } from 'react'\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {}\n\nconst cssSqur = css`\n  border-radius: 0.5em;\n  padding: 0.5em;\n  box-sizing: border-box;\n  box-shadow: inset 0em -0.2em 0.5em #abc;\n  background: transparent;\n  color: #abc;\n  border: none;\n  font-family: 'JetBrains Mono', monospace;\n\n  /* transition: all 100ms; */\n\n  &:hover {\n    box-shadow: inset 0em 0.2em 0.5em #abc;\n  }\n`\n\nfunction Button({ children, ...rest }: Props): ReactElement {\n  return (\n    <button css={cssSqur} {...rest}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nimport React, { ReactElement, useState } from 'react'\nimport Button from '../Button/Button'\nimport ReactMarkdown from 'react-markdown'\nimport { helpTextMarkdown } from './helpContent'\n\nconst cssHelp = css`\n  position: fixed;\n  left: 2em;\n  top: 2em;\n  pointer-events: none;\n`\n\nconst cssHelpContent = css`\n  background: rgba(0, 0, 0, 0.5);\n  color: #abc;\n  border-radius: 0.5em;\n  padding: 1em;\n`\n\nconst cssHelpNavigation = css`\n  pointer-events: all;\n`\n\ntype HelpItem = {\n  title: string\n  value: string\n}\n\nconst variables: HelpItem[] = [\n  {\n    title: 't',\n    value: 'time in secs',\n  },\n  {\n    title: 'i',\n    value: 'index of squr - 0, 1, 2... use i1 for 1-indexed',\n  },\n  {\n    title: 'x',\n    value: 'x index of squr, use x1 for 1-indexed',\n  },\n  {\n    title: 'y',\n    value: 'y index of squr, use y1 for 1-indexed',\n  },\n]\n\nconst functions: HelpItem[] = [\n  {\n    title: 'sin(x)',\n    value: 'sine with 0-1 cycle input and 0-1 output',\n  },\n  {\n    title: 'tri(x)',\n    value: 'triangle with 0-1 cycle input and 0-1 output',\n  },\n  {\n    title: 'sqr(x, phase?)',\n    value: 'square with 0-1 cycle input, optional phase',\n  },\n  {\n    title: 'stp(x, a, b, c, ...)',\n    value: 'step sequencer with 0-1 cycle input',\n  },\n]\n\nconst renderHelpItems = (items: HelpItem[]) => {\n  const itemElements = items.map(({ title, value }) => (\n    <li key={title + value}>\n      <strong>{title}:</strong> {value}\n    </li>\n  ))\n  return <ul>{itemElements}</ul>\n}\n\nconst PAGES = {\n  intro: () => <ReactMarkdown>{helpTextMarkdown}</ReactMarkdown>,\n  variables: () => (\n    <>\n      <h3>Variables</h3>\n      {renderHelpItems(variables)}\n    </>\n  ),\n  functions: () => (\n    <>\n      <h3>Functions</h3>\n      {renderHelpItems(functions)}\n    </>\n  ),\n} as const\n\ntype Page = keyof typeof PAGES\n\ntype SetState<T> = React.Dispatch<React.SetStateAction<T>>\n\nfunction ClosedHelpButtons({ setOpen }: { setOpen: SetState<boolean> }) {\n  return <Button onClick={() => setOpen(true)}>What am I to do?</Button>\n}\n\nfunction OpenedHelpButtons({\n  setOpen,\n  setPage,\n}: {\n  setOpen: SetState<boolean>\n  setPage: SetState<Page>\n}) {\n  return (\n    <>\n      <Button onClick={() => setPage('intro')}>Intro</Button>\n      <Button onClick={() => setPage('functions')}>Functions</Button>\n      <Button onClick={() => setPage('variables')}>Variables</Button>\n      <Button onClick={() => setOpen(false)}>Got it!</Button>\n    </>\n  )\n}\n\nfunction Help(): ReactElement {\n  const [open, setOpen] = useState(false)\n  const [page, setPage] = useState<Page>('intro')\n\n  const helpContent = <div css={cssHelpContent}>{PAGES[page]()}</div>\n\n  return (\n    <div css={cssHelp}>\n      <div css={cssHelpNavigation}>\n        {open ? (\n          <OpenedHelpButtons setOpen={setOpen} setPage={setPage} />\n        ) : (\n          <ClosedHelpButtons setOpen={setOpen} />\n        )}\n      </div>\n      {open && helpContent}\n    </div>\n  )\n}\n\nexport default Help\n","const helpTextMarkdown = `make these Squrs sing and shine  \nwith *expressions* of math  \nand *clicks* of the mouse  \n\nall is synced my friend,  \ntell everyone!  \n\ntell them   \nto come\nand *flip*  \nthe Squrs  \n\ntell them  \nto use their wit  \nto find the sound  \nthat *soothes the soul*`\n\nexport { helpTextMarkdown }\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nimport React, { ReactElement } from 'react'\nimport Button from '../Button/Button'\nimport ReactMarkdown from 'react-markdown'\n\nconst buttonNoticeMarkdown = `Hello Visitor.\n\nFor your safety no sounds will play until you press the button above.\n\nGodspeed, *domj*`\n\nconst cssIntro = css`\n  color: white;\n  text-align: center;\n`\n\nconst cssMargin = css`\n  margin-top: 1em;\n`\n\ninterface Props {\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\n\nfunction Intro({ onClick }: Props): ReactElement {\n  return (\n    <div css={cssIntro}>\n      <h1>SQUR!</h1>\n      <div>\n        <Button onClick={onClick}>□□ start □□</Button>\n      </div>\n      <div css={cssMargin}>\n        <small>\n          <ReactMarkdown>{buttonNoticeMarkdown}</ReactMarkdown>\n        </small>\n      </div>\n    </div>\n  )\n}\n\nexport default Intro\n","import { createContext } from 'react'\n\nconst ConfigContext = createContext<{\n  volume: React.MutableRefObject<number> | null\n}>({ volume: null })\n\nexport default ConfigContext\n","import React, { ReactElement, ReactNode, useEffect, useRef } from 'react'\nimport ConfigContext from './ConfigContext'\n\ninterface Props {\n  children: ReactNode\n}\n\nfunction ConfigContextProvider({ children }: Props): ReactElement {\n  const volume = useRef(1)\n\n  useEffect(() => {\n    // @ts-ignore\n    window.setVolume = (newVolume: number) => (volume.current = newVolume)\n    return () => {\n      // @ts-ignore\n      delete window.setVolume\n    }\n  }, [])\n\n  return (\n    <ConfigContext.Provider value={{ volume: volume }}>\n      {children}\n    </ConfigContext.Provider>\n  )\n}\n\nexport default ConfigContextProvider\n","import React, { ReactElement, ReactNode } from 'react'\n\ninterface Props {\n  palette: { background: string }\n  children: ReactNode\n  side: number | string\n}\n\nconst sqr = (side: number | string) => ({\n  width: side,\n  height: side,\n})\n\nfunction EmptySqur({\n  palette,\n  children,\n  side,\n  onContextMenu,\n  ...rest\n}: Props &\n  React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >): ReactElement {\n  return (\n    <div\n      onContextMenu={onContextMenu}\n      style={{\n        ...{\n          position: 'relative',\n          borderRadius: '0.5em',\n          padding: '0.5em',\n          boxSizing: 'border-box',\n          boxShadow: 'inset 0em -.2em .5em #abc',\n        },\n        ...sqr(side),\n        ...palette,\n      }}\n      {...rest}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default EmptySqur\n","import React from 'react'\n\nconst useAnimationFrame = (callback: (time: number) => void) => {\n  // Use useRef for mutable variables that we want to persist\n  // without triggering a re-render on their change\n  const requestRef = React.useRef<number>()\n  const previousTimeRef = React.useRef<number>()\n\n  const animate = (time: number) => {\n    if (!!previousTimeRef.current) {\n      const deltaTime = time - previousTimeRef.current\n      callback(deltaTime)\n    }\n    previousTimeRef.current = time\n    requestRef.current = requestAnimationFrame(animate)\n  }\n\n  React.useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate)\n    return () => cancelAnimationFrame(requestRef.current!)\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []) // Make sure the effect runs only once\n}\n\nexport default useAnimationFrame\n","import React, { ReactElement, useRef, useState } from 'react'\nimport useAnimationFrame from '../Squr/useAnimationFrame'\n\ninterface Props {\n  value: number\n}\n\nfunction Visualizer({ value }: Props): ReactElement {\n  const values = useRef<number[]>(Array(30).fill(0))\n  const [valuesState, setValuesState] = useState(values.current)\n\n  const v = useRef(0)\n  v.current = value\n\n  useAnimationFrame(() => {\n    values.current = values.current.slice(1, values.current.length)\n    values.current.push(v.current)\n    setValuesState(values.current)\n  })\n\n  const path = valuesState\n    .map(\n      (val, index) => `L${index * 1} ${100 - ((Math.abs(val) || 0) * 90 + 5)}`\n    )\n    .join(' ')\n\n  return (\n    <div style={{ width: '100%' }}>\n      <svg\n        height=\"30\"\n        width=\"100%\"\n        viewBox=\"0 0 30 100\"\n        preserveAspectRatio=\"none\"\n      >\n        <path\n          d={`M-5 0 ${path}`}\n          strokeWidth=\"2\"\n          stroke=\"currentColor\"\n          fill=\"none\"\n          vectorEffect=\"non-scaling-stroke\"\n        />\n      </svg>\n    </div>\n  )\n}\n\nexport default Visualizer\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\nimport React, { ReactElement } from 'react'\nimport { pipe } from 'fp-ts/lib/function'\nimport { collect } from 'fp-ts/lib/Record'\nimport Visualizer from '../../../Visualizer/Visualizer'\nimport ContentProps from '../../ContentProps'\n\nconst renderVariables = (variables: { [key: string]: number }) => {\n  return pipe(\n    variables,\n    collect((key, value) => (\n      <span>\n        <strong> {key}:</strong>\n        {value}\n      </span>\n    ))\n  )\n}\n\nconst cssExtra = css`\n  opacity: 0.3;\n  transition: all 500ms;\n  &:hover {\n    opacity: 1;\n  }\n`\n\nfunction ExpressionContent({\n  expression,\n  setExpression,\n  res,\n  fontColor,\n}: ContentProps): ReactElement {\n  return (\n    <>\n      <textarea\n        style={{\n          fontFamily: 'JetBrains Mono, monospace',\n          borderRadius: '0.3em',\n          padding: '0.5em',\n          boxSizing: 'border-box',\n          border: 'none',\n          width: '100%',\n          boxShadow: 'inset 0em .2em .5em #abc',\n          background: 'transparent',\n          color: fontColor,\n          fontWeight: 'bold',\n          transition: 'all 300ms',\n          maxWidth: '100%',\n          minWidth: '100%',\n          minHeight: '50%',\n          maxHeight: '100%',\n        }}\n        value={expression}\n        onChange={(e) => setExpression(e.target.value)}\n      />\n      <div css={cssExtra} style={{ color: fontColor, fontSize: '0.5em' }}>\n        <Visualizer value={res} />\n        {/* <div>\n          Note: {getNote(variables?.i || 0)}, Vars:{\" \"}\n          {renderVariables(variables || {})}\n        </div>\n\n        <div style={{ color: fontColor, fontSize: \"0.5em\" }}>\n          Instrument: {instrumentName}\n        </div> */}\n      </div>\n      {/* {error && <div style={{ color: \"red\" }}>{error.description}</div>} */}\n    </>\n  )\n}\n\nexport default ExpressionContent\n","/**\n * Sin function normalized to 0-1 cycle input, 0-1 return\n */\nconst normalizedSin = (x: number) => Math.sin(x * Math.PI * 2) / 2 + 0.5\n\n/**\n * input is period\n */\n// const timeSin = TODO\n\nconst normalizedTriangle = (x: number) =>\n  x % 1 < 0.5 ? (x % 1) * 2 : 1 - ((x % 1) - 0.5) * 2\n\nconst normalizedSquare = (x: number, phase: number = 0.5) =>\n  x % 1 > phase ? 1 : 0\n\nconst invert = (x: number) => 1 - x\n\nconst lerp = (from: number, to: number, alpha: number = 0.5) =>\n  from * invert(alpha) + to * alpha\n\nconst normalizedStep = (position: number, ...steps: number[]) => {\n  const len = steps.length\n  const pos = Math.floor(position * len) % len\n  return steps[pos]\n}\n\nexport {\n  normalizedSin,\n  normalizedTriangle,\n  normalizedSquare,\n  invert,\n  lerp,\n  normalizedStep,\n}\n","import * as Tone from 'tone'\n\ninterface ScaleWindow extends Window {\n  sqursSetScale: (index: number) => void\n  sqursListScales: () => void\n}\n\ndeclare let window: ScaleWindow\n\nconst C = 'C'\nconst D = 'D'\nconst E = 'E'\nconst Eb = 'Eb'\nconst F = 'F'\nconst G = 'G'\nconst A = 'A'\nconst Ab = 'Ab'\nconst B = 'B'\nconst Bb = 'Bb'\nconst Db = 'Db'\nconst Gb = 'Gb'\n\nconst SCALE_5_MAJOR_PENTATONIC = [C, D, E, G, A]\nconst SCALE_5_EGYPTIAN_SUSPENDED = [C, D, F, G, Bb]\nconst SCALE_5_BLUES_MINOR_MAN_GONG = [C, Eb, F, Ab, Bb]\nconst SCALE_5_BLUES_MAJOR_RITSUSEN = [C, D, F, G, A]\nconst SCALE_5_MINOR_PENTATONIC = [C, Eb, F, G, Bb]\nconst SCALE_4_TONEJS_SEQUENCER_EXAMPLE = [A, Db, E, Gb]\n\ntype ScaleItem = {\n  title: string\n  notes: string[]\n}\nconst SCALES: ScaleItem[] = [\n  {\n    title: 'Major Pentatonic (5)',\n    notes: SCALE_5_MAJOR_PENTATONIC,\n  },\n  {\n    title: 'Egyptian Suspended (5)',\n    notes: SCALE_5_EGYPTIAN_SUSPENDED,\n  },\n  {\n    title: 'Blues Major Ritsusen (5)',\n    notes: SCALE_5_BLUES_MAJOR_RITSUSEN,\n  },\n  {\n    title: 'Blues Minor Man Gong (5)',\n    notes: SCALE_5_BLUES_MINOR_MAN_GONG,\n  },\n  {\n    title: 'Blues Minor Pentatonic (5)',\n    notes: SCALE_5_MINOR_PENTATONIC,\n  },\n  {\n    title: 'ToneJS Sequencer Example (4)',\n    notes: SCALE_4_TONEJS_SEQUENCER_EXAMPLE,\n  },\n]\n\nlet notes = SCALE_5_BLUES_MAJOR_RITSUSEN\n\nwindow.sqursSetScale = (index: number) => {\n  const scale = SCALES[index % SCALES.length]\n  console.log(`Changing to scale ${scale.title}`)\n  notes = scale.notes\n}\n\nwindow.sqursListScales = () => {\n  SCALES.forEach(({ title, notes }, index) =>\n    console.log(`${index}: ${title} - ${notes}`)\n  )\n}\n\nconst getNote = (i: number) => {\n  const note = notes[i % notes.length]\n  const octave = Math.floor(i / notes.length)\n  return `${note}${octave + 3}`\n}\n\nconst getNoteFrequency = (i: number) => Tone.Frequency(getNote(i)).toFrequency()\n\nexport { getNote, getNoteFrequency }\n","import { compile } from 'expression-eval'\nimport { useContext, useEffect, useRef, useState } from 'react'\nimport * as Tone from 'tone'\nimport ConfigContext from '../../ConfigContext'\nimport {\n  invert,\n  lerp,\n  normalizedSin,\n  normalizedSquare,\n  normalizedStep,\n  normalizedTriangle,\n} from '../../functions'\nimport { getNoteFrequency } from '../../notes'\nimport ParseError from '../../ParseError'\nimport { ExpressionHookFunction } from '../../types'\nimport useAnimationFrame from '../../useAnimationFrame'\n\nconst useExpressionWithSound: ExpressionHookFunction = (\n  expression,\n  setExpression,\n  variables\n) => {\n  const { volume } = useContext(ConfigContext)\n  const [res, setRes] = useState(0)\n\n  useAnimationFrame((_time) => {\n    // Expression result is evaluated in Tone.loop below\n    setRes(resRef.current)\n  })\n\n  const lastValidCompiled = useRef<(context: object) => any>(() => {\n    return 0.5\n  })\n  const parseError = useRef<ParseError>(null)\n\n  useEffect(() => {\n    try {\n      lastValidCompiled.current = compile(expression)\n      parseError.current = null\n    } catch (e) {\n      parseError.current = e as ParseError\n    }\n  }, [expression])\n\n  // #region AUDIO\n  const resRef = useRef(0)\n\n  // Frequency may change with the modification of global musical scale\n  // May be optimized by setting up event+listener or passing note as explicit variable\n  const frequency = getNoteFrequency(variables?.i || 0)\n  useEffect(() => {\n    osc.current = new Tone.Oscillator({\n      frequency,\n      type: 'sine',\n      volume: -60,\n      detune: Math.random() * 30 - 15,\n    })\n      .toDestination()\n      .start()\n\n    return () => {\n      osc.current?.dispose()\n    }\n  }, [frequency])\n\n  const osc = useRef<Tone.Oscillator | null>(null)\n  useEffect(() => {\n    const clamp = (x: number) => Math.max(Math.min(x, 1), -1)\n\n    const loop = new Tone.Loop((time) => {\n      const exprEvalRes = lastValidCompiled.current({\n        time,\n        t: time,\n        sin: normalizedSin,\n        tri: normalizedTriangle,\n        sqr: normalizedSquare,\n        stp: normalizedStep,\n        inv: invert,\n        ...variables,\n      })\n      resRef.current = typeof exprEvalRes === 'number' ? clamp(exprEvalRes) : 0 // evalast may return strings, functions, ...\n\n      if (isNaN(resRef.current) || !osc.current || !volume) return\n      const volumeTarget =\n        resRef.current === 0\n          ? -Infinity\n          : lerp(-60, lerp(-60, -40, volume.current), Math.abs(resRef.current))\n\n      if (osc.current) {\n        osc.current.volume.rampTo(volumeTarget, 0.06, time)\n        osc.current.type = resRef.current >= 0 ? 'sine' : 'square'\n      }\n    }, '0.03').start(0)\n\n    return () => {\n      osc.current?.dispose()\n      loop.dispose()\n    }\n  }, [])\n  // #endregion AUDIO\n\n  return {\n    res: Math.abs(res),\n    error: parseError.current,\n    instrumentName: 'expsyn',\n  }\n}\n\nexport default useExpressionWithSound\n","import React, { ReactElement } from 'react'\nimport Button from '../../../Button/Button'\nimport ContentProps from './../../ContentProps'\n\nconst ACTIVE_COLOR = '#abc'\nconst INACTIVE_BG_COLOR = 'transparent'\nconst INACTIVE_FG_COLOR = ACTIVE_COLOR\nconst ACTIVE_FG_COLOR = 'black'\nconst INACTIVE_FG_WHENON_COLOR = 'rgba(0,0,0,0.1)'\n\nfunction SequencerToggle({\n  res,\n  value,\n  onClick,\n  side,\n  active,\n}: {\n  res: number\n  value: number\n  onClick: () => void\n  side: string | number\n  active: boolean\n}) {\n  let label = '0'\n  if (value >= 0.5) label = '?'\n  if (value >= 1) label = '!'\n\n  const bg = active ? ACTIVE_COLOR : INACTIVE_BG_COLOR\n  const inactiveFg = res > 0.5 ? INACTIVE_FG_WHENON_COLOR : INACTIVE_FG_COLOR\n  const fg = active ? ACTIVE_FG_COLOR : inactiveFg\n\n  return (\n    <Button\n      onClick={onClick}\n      style={{\n        width: side,\n        height: side,\n        background: bg,\n        color: fg,\n        borderRadius: '100%',\n      }}\n    >\n      {label}\n    </Button>\n  )\n}\n\nfunction SequencerContent({\n  res,\n  expression,\n  setExpression,\n  side,\n  extra,\n}: ContentProps): ReactElement {\n  const currentStep = extra?.step || 0\n\n  // TODO share with usesequencer\n  const mappedSteps = expression.split(',').map((str) => {\n    const val = +str\n    return isNaN(val) ? 0 : val\n  })\n\n  const steps = mappedSteps || [0]\n\n  const setStep = (stepIndex: number, value: number) => {\n    const updatedSteps = [...steps]\n    updatedSteps[stepIndex] = value\n    setExpression(updatedSteps.join(','))\n  }\n\n  const toggleStep = (stepIndex: number) => {\n    const step = steps[stepIndex]\n    setStep(stepIndex, (step + 0.5) % 1.5)\n  }\n\n  const toggleSide = `calc(${side} / 4 - 5px)`\n  const toggles = steps.map((step, index) => {\n    return (\n      <SequencerToggle\n        res={res}\n        active={currentStep === index}\n        side={toggleSide}\n        key={index}\n        value={step}\n        onClick={() => toggleStep(index)}\n      />\n    )\n  })\n\n  return <div style={{ textAlign: 'center' }}>{toggles}</div>\n}\n\nexport default SequencerContent\n","import { ReactElement } from 'react'\nimport ContentProps from '../ContentProps'\nimport { ExpressionHookFunction } from '../types'\nimport ExpressionContent from './Expression/ExpressionContent'\nimport useExpressionWithSound from './Expression/useExpressionWithSound'\nimport SequencerContent from './Sequencer/SequencerContent'\nimport useExpressionSequencer from './Sequencer/useExpressionSequencer'\n\ntype Instrument = {\n  view: (props: ContentProps) => ReactElement\n  logic: ExpressionHookFunction\n}\n\nconst INSTRUMENTS: { [name: string]: Instrument } = {\n  gridseq: {\n    view: SequencerContent,\n    logic: useExpressionSequencer,\n  },\n  expsyn: {\n    view: ExpressionContent,\n    logic: useExpressionWithSound,\n  },\n}\n\nexport { INSTRUMENTS }\n","import { ExpressionHookFunction } from '../../types'\nimport * as Tone from 'tone'\nimport { useEffect, useRef, useState } from 'react'\nimport { getNote } from '../../notes'\n\nconst useExpressionSequencer: ExpressionHookFunction = (\n  expression,\n  setExpression,\n  variables\n) => {\n  const steps = useRef<number[]>([0])\n  const [step, setStep] = useState(0)\n\n  useEffect(() => {\n    const mappedSteps = expression.split(',').map((str) => {\n      const val = +str\n      return isNaN(val) ? 0 : val\n    })\n\n    steps.current = mappedSteps || [0]\n    if (steps.current.length < 16) {\n      setExpression('0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0')\n    }\n  }, [expression, setExpression])\n\n  const [res, setRes] = useState(0)\n\n  const synth = useRef<Tone.Synth | null>(null)\n  useEffect(() => {\n    synth.current = new Tone.Synth().toDestination()\n    synth.current.volume.rampTo(-30, 0)\n\n    const loopA = new Tone.Loop((time) => {\n      const stepIndex = Math.round(time * 4) % steps.current.length\n      const currentStep = steps.current[stepIndex]\n      setStep(stepIndex)\n\n      const playing = currentStep >= Math.random()\n\n      setRes(playing ? 1 : 0)\n      // if (playing) synth.current?.start(time).stop(\"+32n\");\n      if (playing)\n        synth.current?.triggerAttackRelease(\n          getNote(variables?.i || 0),\n          '8n',\n          time\n        )\n    }, '8n').start(0)\n\n    return () => {\n      synth.current?.dispose()\n      loopA.dispose()\n    }\n  }, [])\n\n  return { res, error: null, instrumentName: 'sequencer', extra: { step } }\n}\n\nexport default useExpressionSequencer\n","import ContentProps from '../../ContentProps'\nimport { INSTRUMENTS } from '../../instruments'\nimport { MenuItem } from './menu'\n\nfunction useInstrumentMenuItem({ setView, setLogic }: ContentProps): MenuItem {\n  const setLogicAndView = (instrumentName: string) => {\n    setLogic && setLogic(instrumentName)\n    setView && setView(instrumentName)\n  }\n\n  const instruments = Object.keys(INSTRUMENTS).map((instrumentName) => ({\n    title: instrumentName,\n    action: () => setLogicAndView(instrumentName),\n  }))\n\n  return {\n    title: 'Instruments',\n    children: instruments,\n  }\n}\n\nexport default useInstrumentMenuItem\n","import { SetExpressionEventDetail } from './SetExpressionEventDetail'\n\nconst SET_EXPRESSION_EVENT_NAME = 'setExpression'\n\nconst createSetExpressionEvent = (\n  expression: string,\n  condition?: string,\n  bubbles = true\n) =>\n  new CustomEvent<SetExpressionEventDetail>(SET_EXPRESSION_EVENT_NAME, {\n    detail: {\n      expression,\n      condition,\n    },\n    bubbles: true,\n  })\n\nconst setExpression = (\n  expression: string,\n  condition?: string,\n  element?: HTMLElement\n) => {\n  const event = createSetExpressionEvent(expression, condition)\n\n  const dispatchElement = element ?? document\n\n  dispatchElement.dispatchEvent(event)\n}\n\nexport default setExpression\n","import ContentProps from '../../ContentProps'\nimport { cloneToAll, cloneToColumn, cloneToRow } from '../../events/clone'\nimport { MenuItem } from './menu'\n\nfunction useCloneMenuItem({ variables, expression }: ContentProps): MenuItem {\n  return {\n    title: 'Clone expr',\n    children: [\n      {\n        title: 'To All',\n        action: () => cloneToAll(expression),\n      },\n      {\n        title: 'To Row',\n        action: () => cloneToRow(expression, variables?.y || 0),\n      },\n      {\n        title: 'To Column',\n        action: () => cloneToColumn(expression, variables?.x || 0),\n      },\n    ],\n  }\n}\n\nexport default useCloneMenuItem\n","import setExpression from './setExpression'\n\nconst safeInvoke = <T extends unknown>(f?: () => T) => (f ? f() : undefined)\n\n/**\n * Emit an event that clones given expression to all Squrs\n *\n * @param expression\n * @param element Element to emit event on, will default to document\n */\nconst cloneToAll = (expression: string, element?: HTMLElement) => {\n  setExpression(expression, undefined, element)\n}\n\n/**\n * Emit an event that clones given expression to specific column of squrs\n *\n * @param expression\n * @param column\n * @param element Element to emit event on, will default to document\n */\nconst cloneToColumn = (\n  expression: string,\n  column: number,\n  element?: HTMLElement\n) => {\n  setExpression(expression, `x === ${column}`, element)\n}\n\n/**\n * Emit an event that clones given expression to specific row of squrs\n *\n * @param expression\n * @param row\n * @param element Element to emit event on, will default to document\n */\nconst cloneToRow = (expression: string, row: number, element?: HTMLElement) => {\n  setExpression(expression, `y === ${row}`, element)\n}\n\nexport { safeInvoke, cloneToAll, cloneToColumn, cloneToRow }\n","import React, { useState } from 'react'\nimport Button from '../../../Button/Button'\nimport ContentProps from '../../ContentProps'\nimport useInstrumentMenuItem from './uesInstrumentMenuItem'\nimport { MenuItem } from './menu'\nimport useCloneMenuItem from './useCloneMenuItem'\n\nfunction MenuContent(props: ContentProps) {\n  // Index based path in menu\n  const [path, setPath] = useState<number[]>([])\n\n  const menu = [useInstrumentMenuItem(props), useCloneMenuItem(props)]\n\n  const selectedMenu = path.reduce((subMenu, index) => {\n    const selectedSubMenu = subMenu[index]\n    if (selectedSubMenu.children) {\n      return selectedSubMenu.children\n    }\n    return subMenu\n  }, menu)\n\n  const handleMenuItemClick = (menuItem: MenuItem, index: number) => () => {\n    if (menuItem.children) {\n      setPath((path) => [...path, index])\n      return\n    }\n\n    if (menuItem.action) {\n      menuItem.action()\n      return\n    }\n  }\n\n  return selectedMenu.map((menuItem, index) => (\n    <Button key={menuItem.title} onClick={handleMenuItemClick(menuItem, index)}>\n      {menuItem.title}\n    </Button>\n  ))\n}\n\nexport default MenuContent\n","import { useState } from 'react'\nimport { ContentElement } from '../types'\nimport MenuContent from './menu/MenuContent'\n\nfunction useFlipside(baseContent: ContentElement) {\n  const [isFlipped, setIsFlipped] = useState(false)\n  const handleFlip = () => {\n    setIsFlipped((flipped) => !flipped)\n  }\n\n  const ContentComponent = isFlipped ? MenuContent : baseContent\n\n  return {\n    handleFlip,\n    ContentComponent,\n  }\n}\n\nexport default useFlipside\n","import { useEffect } from 'react'\nimport { eval as evalExpr, parse } from 'expression-eval'\nimport { SetExpressionEventDetail } from './events/SetExpressionEventDetail'\nimport ContentProps from './ContentProps'\n\nfunction useSetExpressionEventListener(\n  setExpression: (expr: string) => void,\n  variables: ContentProps['variables'] = {}\n) {\n  useEffect(() => {\n    const listener = (e: Event) => {\n      const setExpressionEvent = e as CustomEvent<SetExpressionEventDetail>\n\n      const { condition, expression } = setExpressionEvent.detail\n\n      if (!condition || evalExpr(parse(condition), variables)) {\n        setExpression(expression)\n      }\n    }\n    window.addEventListener('setExpression', listener)\n\n    return () => {\n      window.removeEventListener('setExpression', listener)\n    }\n  }, [setExpression, variables])\n}\n\nexport default useSetExpressionEventListener\n","/**\n *\n *       * ******* *\n *       *         *\n *       *   .5    *\n *       *         *\n *       * ******* *\n *\n */\n\n//useAnimationFrame((time) => {setDimmer(state => (state + time / 1000) % 1)})\n\n// TODO multiple preset animations\n// TODO beat sync\n// TODO saving expression as preset\n// TODO persisting presets\n// TODO live sync of presets / selection (fbase realtime db?)\n// TODO support 2x not just 2*x\n// TODO input bg on focus\n// TODO shared globals (exposed to users)\n// TODO deterministic noise functions\n// TODO splittable squrs\n// TODO keyboard func ~ key.a / key('a') / variable for few special keys / gamepad\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nimport React, { ReactElement, useState } from 'react'\nimport EmptySqur from './EmptySqur'\nimport SqurProps from './SqurProps'\nimport { INSTRUMENTS } from './instruments'\nimport useFlipside from './flipside/useFlipside'\nimport Button from '../Button/Button'\nimport useSetExpressionEventListener from './useSetExpressionEventListener'\nimport useExpressionWithSound from './instruments/Expression/useExpressionWithSound'\nimport ExpressionContent from './instruments/Expression/ExpressionContent'\n\n// const COLOR = '#72dec2'\n// const COLOR_RGB = '114, 222, 194'\n// const COLOR_RGB = '255, 0, 255'\nconst COLOR_RGB = '170, 187, 204'\n\n// const com = (a: any[]) => a.map(e => e.toString()).join(',')\n\n// const dim = (val: number) => {\n//     const v = val * 255\n//     return {background: `rgb(${com([v, v, v])})`}\n// }\n\nconst trns = (a: number) => ({ background: `rgba(${COLOR_RGB}, ${a})` })\nconst black = (a: number) => ({ background: `rgba(0,0,0, ${a})` })\n\n// TODO toggle type information\n\n// const handleTouch = <T extends unknown>(set: React.Dispatch<T>, off: T, on: T): {[key: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>]: Function} => ({\nconst handleTouch = <T extends unknown>(\n  current: T,\n  set: React.Dispatch<T>,\n  off: T,\n  on: T\n) => ({\n  // onTouchStart: () => set(on),\n  onTouchStart: () => (current === on ? set(off) : set(on)),\n  // onTouchStart: () => console.log(on),\n  // onClick: () => console.log(on),\n  // onTouchEnd: () => set(off),\n  // onTouchEnd: () => console.log(off),\n})\n\nfunction useExternalIfDefined<T>(\n  init: T,\n  external?: T,\n  setExternal?: (value: T) => void\n): [T, (value: T) => void] {\n  const [internal, setInternal] = useState(init)\n  const value = external ?? internal\n  const setValue = setExternal ?? setInternal\n\n  return [value, setValue]\n}\n\nconst cssFlipButton = css`\n  width: calc(100% - 1.3em);\n  position: absolute;\n  bottom: 0.9em;\n  left: 0.6em;\n  font-size: 0.25em;\n`\n\nfunction Squr({\n  init,\n  side = 100,\n  expression: expressionExternal,\n  setExpression: setExpressionExternal,\n  variables = {},\n  contentComponent,\n  useExpressionHook: useExpressionHookExternal,\n  logic: logicExternal,\n  setLogic: setLogicExternal,\n  view: viewExternal,\n  setView: setViewExternal,\n}: SqurProps): ReactElement {\n  const [expression, setExpression] = useExternalIfDefined(\n    '0',\n    expressionExternal,\n    setExpressionExternal\n  )\n  const [logic, setLogic] = useExternalIfDefined(\n    'expsyn',\n    logicExternal,\n    setLogicExternal\n  )\n  const [view, setView] = useExternalIfDefined(\n    'expsyn',\n    viewExternal,\n    setViewExternal\n  )\n\n  const { logic: useLogic } = INSTRUMENTS[logic] || {\n    logic: useExpressionWithSound,\n  }\n  const { view: View } = INSTRUMENTS[view] || { view: ExpressionContent }\n\n  const BaseComponent = contentComponent ?? View\n  const { ContentComponent, handleFlip } = useFlipside(BaseComponent)\n\n  // TODO useTouch\n  const useExpressionHook = useExpressionHookExternal ?? useLogic\n\n  const {\n    res: resBase,\n    error,\n    extra,\n  } = useExpressionHook(expression, setExpression, variables)\n  const [touching, setTouching] = useState(1)\n\n  const res = resBase\n  const fontColor = res * touching < 0.5 ? '#abc' : '#444'\n  const palette = res * touching > 0 ? trns(res) : black(-res)\n\n  useSetExpressionEventListener(setExpression, variables)\n\n  return (\n    <EmptySqur\n      palette={palette}\n      side={side}\n      {...handleTouch(touching, setTouching, 0, 1)}\n    >\n      <ContentComponent\n        side={side}\n        expression={expression}\n        setExpression={setExpression}\n        res={res}\n        fontColor={fontColor}\n        variables={variables}\n        error={error}\n        logic={logic}\n        setLogic={setLogic}\n        view={view}\n        setView={setView}\n        extra={extra}\n      />\n      <Button css={cssFlipButton} onClick={handleFlip}>\n        flip\n      </Button>\n    </EmptySqur>\n  )\n}\n\nexport default Squr\n","import { INSTRUMENTS } from './instruments'\n\nconst DEFAULT_EXPRESSION = 'sin(t)'\nconst DEFAULT_LOGIC = Object.keys(INSTRUMENTS)[0]\nconst DEFAULT_VIEW = Object.keys(INSTRUMENTS)[0]\n\nconst getSqurKey = (logic = 'logic', view = 'view') => `${logic}-${view}`\n\nexport { DEFAULT_EXPRESSION, DEFAULT_LOGIC, DEFAULT_VIEW, getSqurKey }\n","import React, { ReactElement } from 'react'\nimport Squr from './Squr'\n\nimport 'firebase/database'\nimport SqurProps from './SqurProps'\nimport EmptySqur from './EmptySqur'\nimport { getSqurKey } from './squrCommon'\nimport { SqurPersistenceProps, UsePersistenceHook } from './store/squrStore'\n\ninterface PersistentSqurProps extends Omit<SqurProps, SqurPersistenceProps> {\n  usePersistenceHook: UsePersistenceHook\n  storageKey?: string\n}\n\nfunction PersistentSqur({\n  side = 100,\n  storageKey = '/squr',\n  usePersistenceHook,\n  ...rest\n}: PersistentSqurProps): ReactElement {\n  const { expression, setExpression, logic, setLogic, view, setView, isError } =\n    usePersistenceHook(storageKey)\n\n  if (isError) {\n    return (\n      <EmptySqur side={side} palette={{ background: 'black' }}>\n        Failed to load\n      </EmptySqur>\n    )\n  }\n\n  // Key is reset for each logic/view combination to enable exchange of hooks\n  // without breaking order between renders\n  const key = getSqurKey(logic, view)\n  return (\n    <Squr\n      key={key}\n      side={side}\n      expression={expression}\n      setExpression={setExpression}\n      logic={logic}\n      setLogic={setLogic}\n      view={view}\n      setView={setView}\n      {...rest}\n    />\n  )\n}\n\nexport default PersistentSqur\n","import React from 'react'\nimport PersistentSqur from './PersistentSqur'\nimport { UsePersistenceHook } from './store/squrStore'\n\nconst makeSqurs = (\n  resolution: number,\n  room: string,\n  usePersistenceHook: UsePersistenceHook\n) => {\n  const sqursPerRow = resolution\n  const sqursPerCol = resolution\n\n  const squrCount = sqursPerRow * sqursPerCol\n  const sideSize = `${80 / sqursPerRow}vmin`\n\n  const getXIndex = (index: number, perRow = sqursPerRow) => index % perRow\n  const getYIndex = (index: number, perRow = sqursPerRow) =>\n    Math.floor(index / perRow)\n  const a = new Array(squrCount).fill(1)\n  const squrs = a.map((_v, index) => {\n    return (\n      <PersistentSqur\n        usePersistenceHook={usePersistenceHook}\n        key={index}\n        side={sideSize}\n        storageKey={`/${room}/${index}`}\n        variables={{\n          i: index,\n          i1: index + 1,\n          x: getXIndex(index),\n          x1: getXIndex(index) + 1,\n          y: getYIndex(index),\n          y1: getYIndex(index) + 1,\n        }}\n      />\n    )\n  })\n\n  return {\n    squrs,\n    sideSize,\n  }\n}\n\nexport default makeSqurs\n","import React from 'react'\n\nconst TimeContext = React.createContext(0)\n\nexport { TimeContext }\n","import { useEffect, useState } from 'react'\n\nconst getItem = (key: string, defaultItem: string) => {\n  const item = window.localStorage.getItem(key)\n  return item === null ? defaultItem : item\n}\n\nconst setItem = (key: string, item: string) => {\n  window.localStorage.setItem(key, item)\n}\n\n// TODO callback queue\n\nfunction useLocalStorageState(\n  key: string,\n  defaultItem: string\n): [string, (value: string) => void] {\n  const [state, setState] = useState(() => getItem(key, defaultItem))\n  // TODO polling update - sync between application instances\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const currentItem = getItem(key, defaultItem)\n      if (state !== currentItem) {\n        setState(currentItem)\n      }\n    }, 500)\n    return () => {\n      clearInterval(interval)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [key, defaultItem])\n\n  const setStateAndPersist = (value: string) => {\n    setState(value)\n    setItem(key, value)\n  }\n\n  return [state, setStateAndPersist]\n}\n\nexport default useLocalStorageState\n","import useLocalStorageState from './useLocalStorageState'\nimport { DEFAULT_EXPRESSION, DEFAULT_LOGIC, DEFAULT_VIEW } from '../squrCommon'\nimport { UsePersistenceHook } from './squrStore'\n\nconst useLocalStoragePersistence: UsePersistenceHook = (storageKey: string) => {\n  const [expression, setExpression] = useLocalStorageState(\n    `${storageKey}-expression`,\n    DEFAULT_EXPRESSION\n  )\n  const [logic, setLogic] = useLocalStorageState(\n    `${storageKey}-logic`,\n    DEFAULT_LOGIC\n  )\n  const [view, setView] = useLocalStorageState(\n    `${storageKey}-view`,\n    DEFAULT_VIEW\n  )\n\n  return {\n    expression,\n    setExpression,\n    logic,\n    setLogic,\n    view,\n    setView,\n  }\n}\n\nexport default useLocalStoragePersistence\n","import { useMemo } from 'react'\nimport { useFirebasePersistence, useLocalStoragePersistence } from './store'\nimport { UsePersistenceHook } from './store/squrStore'\n\nconst STORES: { [key: string]: UsePersistenceHook } = {\n  firebase: useFirebasePersistence,\n  local: useLocalStoragePersistence,\n}\n\nfunction useQueryParamsConfig() {\n  // TODO update on change (MutationObserver, https://stackoverflow.com/questions/3522090/event-when-window-location-href-changes)\n  const search = window.location.search\n  const params = useMemo(() => {\n    const searchParams = new URLSearchParams(search)\n    const storeParam = searchParams.get('store') || 'firebase'\n    const store = STORES[storeParam] || useLocalStoragePersistence\n    return {\n      store,\n      resolution: +(searchParams.get('resolution') || '4'),\n      room: searchParams.get('room') || 'squrs',\n    }\n  }, [search])\n\n  return params\n}\n\nexport default useQueryParamsConfig\n","import { useEffect, useState } from 'react'\n\nimport 'firebase/database'\nimport { useDatabase, useDatabaseObjectData } from 'reactfire'\nimport { DEFAULT_EXPRESSION, DEFAULT_LOGIC, DEFAULT_VIEW } from '../squrCommon'\nimport { UsePersistenceHook } from './squrStore'\n\nconst useFirebasePersistence: UsePersistenceHook = (storageKey: string) => {\n  const ref = useDatabase().ref(storageKey)\n\n  const { data, status } = useDatabaseObjectData<{\n    expr: string\n    logic?: string\n    view?: string\n  }>(ref)\n\n  // Optimistic updates and fix for cursor jumping (https://github.com/facebook/react/issues/955)\n  const [localExpression, setLocalExpression] = useState<string | undefined>(\n    undefined\n  )\n  const [localLogic, setLocalLogic] = useState<string | undefined>(undefined)\n  const [localView, setLocalView] = useState<string | undefined>(undefined)\n  // TODO debounce\n  const makeSetStateAndFirebase =\n    (setLocal: typeof setLocalExpression, firebaseField: string) =>\n    (newValue: string) => {\n      setLocal(newValue)\n      ref.update({ [firebaseField]: newValue })\n    }\n  const setExpression = makeSetStateAndFirebase(setLocalExpression, 'expr')\n  const setLogic = makeSetStateAndFirebase(setLocalLogic, 'logic')\n  const setView = makeSetStateAndFirebase(setLocalView, 'view')\n\n  useEffect(() => {\n    if (status === 'success') {\n      const expr = data.expr ?? DEFAULT_EXPRESSION\n      const logic = data.logic ?? DEFAULT_LOGIC\n      const view = data.view ?? DEFAULT_VIEW\n      if (expr !== localExpression) setLocalExpression(expr)\n      if (logic !== localLogic) setLocalLogic(logic)\n      if (view !== localView) setLocalView(view)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [status, data])\n\n  return {\n    expression: localExpression,\n    setExpression,\n    logic: localLogic,\n    setLogic,\n    view: localView,\n    setView,\n  }\n}\n\nexport default useFirebasePersistence\n","import { useState } from 'react'\nimport useAnimationFrame from './Squr/useAnimationFrame'\n\n// TODO allow refing other times\n// TODO time controls (reffable, context)\nconst useTime = (init: number = 0) => {\n  const [time, setTime] = useState(init)\n  useAnimationFrame((time) => setTime((ut) => ut + time / 1000))\n\n  return time\n}\n\nexport default useTime\n","import React, { useMemo, useState } from 'react'\nimport { FirebaseAppProvider } from 'reactfire'\nimport * as Tone from 'tone'\nimport './App.css'\nimport firebaseConfig from './firebaseConfig'\nimport Credit from './Help/Credit'\nimport Help from './Help/Help'\nimport Intro from './Intro/Intro'\nimport ConfigContextProvider from './Squr/ConfigContextProvider'\nimport makeSqurs from './Squr/makeSqurs'\nimport { TimeContext } from './Squr/TimeContext'\nimport useQueryParamsConfig from './Squr/useQueryParamsConfig'\nimport useTime from './useTime'\n\nfunction App() {\n  const time = useTime()\n  const [started, setStarted] = useState(false)\n  const config = useQueryParamsConfig()\n  const { squrs, sideSize } = useMemo(() => {\n    const { resolution, room, store } = config\n    return makeSqurs(resolution, room, store)\n  }, [config])\n\n  return (\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n      <ConfigContextProvider>\n        <TimeContext.Provider value={time}>\n          {/* TODO Redo with minimal grid based centering */}\n          <div\n            style={{\n              display: 'flex',\n              height: '100vh',\n              width: '100vw',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            {started ? (\n              <div\n                style={{\n                  display: 'grid',\n                  gridTemplateColumns: `repeat(${config.resolution}, ${sideSize})`,\n                  gap: '2vmin',\n                }}\n              >\n                {squrs}\n                <Help />\n                <Credit />\n              </div>\n            ) : (\n              <Intro\n                onClick={() => {\n                  setStarted(true)\n                  Tone.start()\n                  Tone.Transport.start()\n                }}\n              />\n            )}\n          </div>\n        </TimeContext.Provider>\n      </ConfigContextProvider>\n    </FirebaseAppProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/fonts/JetBrainsMono.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}