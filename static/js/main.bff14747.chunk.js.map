{"version":3,"sources":["firebaseConfig.ts","Button/Button.tsx","Help/Help.tsx","Intro/Intro.tsx","Squr/ConfigContext.ts","Squr/ConfigContextProvider.tsx","Squr/EmptySqur.tsx","Squr/useAnimationFrame.ts","Visualizer/Visualizer.tsx","Squr/notes.ts","Squr/instruments/Expression/ExpressionContent.tsx","Squr/functions.ts","Squr/instruments/Expression/useExpressionWithSound.ts","Squr/Squr.tsx","Squr/instruments/Sequencer/SequencerContent.tsx","Squr/instruments/index.ts","Squr/instruments/Sequencer/useExpressionSequencer.ts","Squr/SqurFirebase.tsx","Squr/TimeContext.tsx","useTime.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","cssSqur","css","Button","children","rest","cssHelp","cssHelpContent","variables","title","value","functions","renderHelpItems","items","itemElements","map","Help","useState","open","setOpen","helpContent","onClick","o","cssIntro","Intro","ConfigContext","createContext","volume","ConfigContextProvider","useRef","useEffect","window","setVolume","newVolume","current","Provider","sqr","side","width","height","EmptySqur","color","onContextMenu","style","borderRadius","padding","boxSizing","boxShadow","useAnimationFrame","callback","requestRef","React","previousTimeRef","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualizer","values","Array","fill","valuesState","setValuesState","v","slice","length","push","path","val","index","Math","abs","join","viewBox","preserveAspectRatio","d","strokeWidth","stroke","vectorEffect","C","F","G","Bb","notes","getNote","i","note","octave","floor","renderVariables","pipe","collect","key","cssExtra","ExpressionContent","expression","setExpression","res","fontColor","error","instrumentName","fontFamily","border","background","fontWeight","transition","maxWidth","minWidth","minHeight","maxHeight","onChange","e","target","fontSize","description","normalizedSin","x","sin","PI","normalizedTriangle","normalizedSquare","phase","invert","lerp","from","to","alpha","normalizedStep","position","len","pos","useExpressionWithSound","useContext","setRes","_time","resRef","lastValidCompiled","parseError","compile","osc","Tone","frequency","toFrequency","type","detune","random","toDestination","start","dispose","loop","exprEvalRes","t","tri","stp","inv","max","min","isNaN","volumeTarget","Infinity","rampTo","Squr","a","init","expressionExternal","setExpressionExternal","toggleInstrument","contentComponent","useExpressionHook","expressionInternal","setExpressionInternal","extra","black","ContentComponent","preventDefault","ACTIVE_COLOR","SequencerToggle","active","label","bg","fg","SequencerContent","INSTRUMENTS","gridseq","view","currentStep","step","steps","split","str","toggleStep","stepIndex","updatedSteps","setStep","toggleSide","toggles","textAlign","logic","mappedSteps","synth","loopA","round","playing","triggerAttackRelease","expsyn","SqurFirebase","ref","useDatabase","useDatabaseObjectData","data","status","undefined","localExpression","setLocalExpression","expr","instrument","update","newExpression","TimeContext","useTime","setTime","ut","SIDE","getXIndex","perRow","getYIndex","dynamicFirebaseSqurs","SQURS_PER_ROW","_v","i1","x1","y","y1","App","started","setStarted","display","alignItems","justifyContent","gridTemplateColumns","gap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bff14747.chunk.js","sourcesContent":["const firebaseConfig = {\n  apiKey: \"AIzaSyA6miG1egwhyCpNcBdr-R8P3flUJP8VLj4\",\n  authDomain: \"squr-d2ae8.firebaseapp.com\",\n  databaseURL:\n    \"https://squr-d2ae8-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"squr-d2ae8\",\n  storageBucket: \"squr-d2ae8.appspot.com\",\n  messagingSenderId: \"25610237851\",\n  appId: \"1:25610237851:web:8b825f5e7ab2363cd2533e\",\n};\n\nexport default firebaseConfig;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nimport React, { ReactElement } from 'react'\n\ninterface Props extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n    \n}\n\nconst cssSqur = css`\n    border-radius: 0.5em;\n    padding: 0.5em;\n    box-sizing: border-box;\n    box-shadow: inset 0em -.2em .5em #abc;\n    background: transparent;\n    color: #abc;\n    border: none;\n    font-family: 'JetBrains Mono', monospace;\n\n    /* transition: all 100ms; */\n\n    &:hover {\n        box-shadow: inset 0em .2em .5em #abc;\n    }\n`\n\nfunction Button({children, ...rest}: Props): ReactElement {\n    return (\n            <button css={cssSqur} {...rest}>{children}</button>\n    )\n}\n\nexport default Button\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\n\nimport React, { ReactElement, useState } from 'react'\nimport Button from '../Button/Button'\n\ninterface Props {\n    \n}\n\nconst cssHelp = css`\n    position: fixed;\n    left: 2em;\n    top: 2em;\n`\n\nconst cssHelpContent = css`\n    background: rgba(0,0,0, 0.5);\n    color: #abc;\n    border-radius: 0.5em;\n    padding: 1em;\n    pointer-events: none;\n`\n\ntype HelpItem = {\n    title: string\n    value: string\n}\n\nconst variables: HelpItem[] = [\n    {\n        title: 't',\n        value: 'time in secs'\n    },\n    {\n        title: 'i',\n        value: 'index of squr - 0, 1, 2... use i1 for 1-indexed'\n    },\n    {\n        title: 'x',\n        value: 'x index of squr, use x1 for 1-indexed'\n    },\n    {\n        title: 'y',\n        value: 'y index of squr, use y1 for 1-indexed'\n    },\n]\n\nconst functions: HelpItem[] = [\n    {\n        title: 'sin(x)',\n        value: 'sine with 0-1 cycle input and 0-1 output'\n    },\n    {\n        title: 'tri(x)',\n        value: 'triangle with 0-1 cycle input and 0-1 output'\n    },\n    {\n        title: 'sqr(x, phase?)',\n        value: 'square with 0-1 cycle input, optional phase'\n    },\n    {\n        title: 'stp(x, a, b, c, ...)',\n        value: 'step sequencer with 0-1 cycle input'\n    },\n]\n\nconst renderHelpItems = (items: HelpItem[]) => {\n    const itemElements = items.map(({title, value}) => <li key={title+value}><strong>{title}:</strong> {value}</li>)\n    return <ul>{itemElements}</ul>\n}\n\nfunction Help({}: Props): ReactElement {\n    const [open, setOpen] = useState(false)\n\n    const helpContent = (<div css={cssHelpContent}>\n                <p>make the squrs sing and shine with math expressions and clicks</p>\n                <p>all is syncd, tell friends</p>\n                <p>RIGHT CLICK switches instruments</p>\n                <h3>Variables</h3>\n                {renderHelpItems(variables)}\n                <h3>Functions</h3>\n                {renderHelpItems(functions)}\n            </div>)\n\n    return (\n        <div css={cssHelp}>\n            <div>\n                <Button onClick={() => setOpen(o => !o)}>Help pls</Button>\n            </div>\n            {open && helpContent}\n        </div>\n    )\n}\n\nexport default Help\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nimport React, { ReactElement } from 'react'\nimport Button from '../Button/Button'\n\n\nconst cssIntro = css`\n    color: white;\n    text-align: center;\n` \n\ninterface Props {\n    onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\n\nfunction Intro({onClick}: Props): ReactElement {\n    return (\n        <div css={cssIntro}>\n            <h1>SQUR!</h1>\n            <div><Button onClick={onClick}>□□ start □□</Button></div>\n            <div>\n                <small>gotta make you click to make sounds, aight, domj</small>\n            </div>\n        </div>\n    )\n}\n\nexport default Intro\n","import { createContext } from \"react\";\n\nconst ConfigContext = createContext<{volume: React.MutableRefObject<number> | null}>({volume: null})\n\nexport default ConfigContext\n","import React, { ReactElement, ReactNode, useEffect, useRef } from 'react'\nimport ConfigContext from './ConfigContext'\n\ninterface Props {\n    children: ReactNode\n}\n\nfunction ConfigContextProvider({children}: Props): ReactElement {\n\n    const volume = useRef(1)\n\n    useEffect(() => {\n        // @ts-ignore\n        window.setVolume = (newVolume: number) => volume.current = newVolume\n        return () => {\n            // @ts-ignore\n            delete window.setVolume\n        }\n    }, [])\n\n    return (\n        <ConfigContext.Provider value={{ volume: volume }} >\n            {children}\n        </ConfigContext.Provider>\n    )\n}\n\nexport default ConfigContextProvider\n","import React, { ReactElement, ReactNode } from 'react'\n\ninterface Props {\n    color: { background: string }\n    children: ReactNode\n    side: number | string\n    onContextMenu?: React.MouseEventHandler<HTMLDivElement> | undefined\n}\n\nconst sqr = (side: number | string) => ({\n    width: side,\n    height: side\n})\n\nfunction EmptySqur({color, children, side, onContextMenu}: Props): ReactElement {\n    return (\n        <div onContextMenu={onContextMenu} style={\n            {\n                ...{borderRadius: '0.5em', padding: '0.5em', boxSizing: 'border-box', boxShadow: 'inset 0em -.2em .5em #abc'},\n                ...sqr(side),\n                ...color,\n            }\n        }>\n            {children}\n        </div>\n    )\n}\n\nexport default EmptySqur\n","import React from 'react'\n\nconst useAnimationFrame = (callback: (time: number) => void) => {\n  // Use useRef for mutable variables that we want to persist\n  // without triggering a re-render on their change\n  const requestRef = React.useRef<number>();\n  const previousTimeRef = React.useRef<number>();\n\n  const animate = (time: number) => {\n    if (!!previousTimeRef.current) {\n      const deltaTime = time - previousTimeRef.current;\n      callback(deltaTime);\n    }\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  React.useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(requestRef.current!);\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, []); // Make sure the effect runs only once\n};\n\nexport default useAnimationFrame;\n","import React, { ReactElement, useRef, useState } from 'react'\nimport useAnimationFrame from '../Squr/useAnimationFrame'\n\ninterface Props {\n    value: number\n}\n\nfunction Visualizer({value}: Props): ReactElement {\n    const values = useRef<number[]>(Array(30).fill(0))\n    const [valuesState, setValuesState] = useState(values.current)\n\n    const v = useRef(0)\n    v.current = value\n\n    useAnimationFrame(() => {\n        values.current = values.current.slice(1, values.current.length)\n        values.current.push(v.current)\n        setValuesState(values.current)\n    })\n\n    const path = valuesState\n        .map((val, index) => `L${index * 1} ${100 - (Math.abs(val) * 90 + 5)}`)\n        .join(' ')\n\n    return (\n        <div style={{width: '100%'}}>\n            <svg height=\"30\" width=\"100%\" viewBox=\"0 0 30 100\" preserveAspectRatio=\"none\">\n                <path d={`M-5 0 ${path}`} strokeWidth=\"2\" stroke=\"currentColor\" fill=\"none\" vectorEffect=\"non-scaling-stroke\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default Visualizer\n","import * as Tone from 'tone'\n\n// const notes = ['C', 'G', 'D', 'A', 'E']\n// const notes = ['C', 'D', 'E', 'A', 'G']\n\nconst C = 'C'\nconst D = 'D'\nconst E = 'E'\nconst Eb = 'Eb'\nconst F = 'F'\nconst G = 'G'\nconst A = 'A'\nconst Ab = 'Ab'\nconst B = 'B'\nconst Bb = 'Bb'\n\nconst SCALE_5_MAJOR_PENTATONIC = [C, D, E, G, A]\nconst SCALE_5_EGYPTIAN_SUSPENDED = [C, D, F, G, Bb]\n// const SCALE_5_BLUES_MINOR_MAN_GONG = [C, Eb, F, Ab, Bb, C]\nconst SCALE_5_BLUES_MINOR_MAN_GONG = [C, Eb, F, Ab, Bb]\nconst SCALE_5_BLUES_MAJOR_RITSUSEN = [C, D, F, G, A]\nconst SCALE_5_MINOR_PENTATONIC = [C, Eb, F, G, Bb]\nconst SCALE_4_TONEJS_SEQUENCER_EXAMPLE = [A, 'Db', E, 'Gb']\nconst notes = SCALE_5_EGYPTIAN_SUSPENDED\n\nconst getNote = (i: number) => {\n    const note = notes[i % notes.length]\n    const octave = Math.floor(i / notes.length)\n    return `${note}${octave + 3}`\n}\n// const getNote = (i: number) => `C${i}`\nconst getNoteFrequency = (i: number) => Tone.Frequency(getNote(i)).toFrequency()\n\nexport { getNote, getNoteFrequency }","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { pipe } from \"fp-ts/lib/function\";\nimport { collect } from \"fp-ts/lib/Record\";\nimport React, { ReactElement } from \"react\";\nimport Visualizer from \"../../../Visualizer/Visualizer\";\nimport ContentProps from \"../../ContentProps\";\nimport { getNote } from \"../../notes\";\n\nconst renderVariables = (variables: { [key: string]: number }) => {\n  return pipe(\n    variables,\n    collect((key, value) => (\n      <span>\n        <strong> {key}:</strong>\n        {value}\n      </span>\n    ))\n  );\n};\n\nconst cssExtra = css`\n  opacity: 0.3;\n  transition: all 500ms;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nfunction ExpressionContent({\n  expression,\n  setExpression,\n  res,\n  fontColor,\n  variables,\n  error,\n  instrumentName,\n}: ContentProps): ReactElement {\n  return (\n    <>\n      <textarea\n        style={{\n          fontFamily: \"JetBrains Mono, monospace\",\n          borderRadius: \"0.3em\",\n          padding: \"0.5em\",\n          boxSizing: \"border-box\",\n          border: \"none\",\n          width: \"100%\",\n          boxShadow: \"inset 0em .2em .5em #abc\",\n          background: \"transparent\",\n          color: fontColor,\n          fontWeight: \"bold\",\n          transition: \"all 300ms\",\n          maxWidth: \"100%\",\n          minWidth: \"100%\",\n          minHeight: \"50%\",\n          maxHeight: \"100%\",\n        }}\n        value={expression}\n        onChange={(e) => setExpression(e.target.value)}\n      />\n      <div css={cssExtra} style={{ color: fontColor, fontSize: \"0.5em\" }}>\n        <Visualizer value={res} />\n        <div>\n          Note: {getNote(variables?.i || 0)}, Vars:{\" \"}\n          {renderVariables(variables || {})}\n        </div>\n\n        <div style={{ color: fontColor, fontSize: \"0.5em\" }}>\n          Instrument: {instrumentName}\n        </div>\n      </div>\n      {error && <div style={{ color: \"red\" }}>{error.description}</div>}\n    </>\n  );\n}\n\nexport default ExpressionContent;\n","/**\n * Sin function normalized to 0-1 cycle input, 0-1 return\n */\nconst normalizedSin = (x: number) => Math.sin(x * Math.PI * 2) / 2 + 0.5\n\n/**\n * input is period\n */\n// const timeSin = TODO\n\nconst normalizedTriangle = (x: number) => (x % 1) < 0.5 ? x % 1 * 2 : 1 - (x % 1 - 0.5) * 2\n\nconst normalizedSquare = (x: number, phase: number = 0.5) => x % 1 > phase ? 1 : 0\n\nconst invert = (x: number) => 1 - x\n\nconst lerp = (from: number, to: number, alpha: number = 0.5) => from * invert(alpha) + to * alpha\n\nconst normalizedStep = (position: number, ...steps: number[]) => {\n    const len = steps.length\n    const pos = Math.floor(position * len) % len\n    return steps[pos]\n}\n\nexport {normalizedSin, normalizedTriangle, normalizedSquare, invert, lerp, normalizedStep }","\nimport { compile, parse } from 'expression-eval'\nimport { useContext, useEffect, useRef, useState } from 'react'\nimport * as Tone from 'tone'\nimport ConfigContext from '../../ConfigContext'\nimport { invert, lerp, normalizedSin, normalizedSquare, normalizedStep, normalizedTriangle } from '../../functions'\nimport { getNote, getNoteFrequency } from '../../notes'\nimport ParseError from '../../ParseError'\nimport { ExpressionHookFunction } from '../../types'\nimport useAnimationFrame from '../../useAnimationFrame'\n\nconst useExpressionWithSound: ExpressionHookFunction = (expression, setExpression, variables) => {\n    const { volume } = useContext(ConfigContext)\n    const [res, setRes] = useState(0)\n\n    useAnimationFrame((_time) => {\n        setRes(resRef.current)\n    })\n    \n    // const lastValidAst = useRef(parse('0'))\n    const lastValidCompiled = useRef<(context: object) => any>(() => {return 0.5})\n    const parseError = useRef<ParseError>(null)\n\n    useEffect(() => {\n        try {\n            // const ast = parse(expression)\n            // lastValidAst.current = ast\n            lastValidCompiled.current = compile(expression)\n            parseError.current = null\n        } catch(e) {\n            parseError.current = e as ParseError\n        }\n    }, [expression])\n    \n\n    // #region AUDIO\n\n    // const prevRes = useRef(0)\n    const resRef = useRef(0)\n    \n    // Trigger notes - didn't sound half bad\n    // const synth = useRef<Tone.Synth<Tone.SynthOptions> | null>(null)\n    // useEffect(() => {\n    //     synth.current = new Tone.Synth().toDestination()\n    //     return () => {\n    //         synth.current?.disconnect().dispose()\n    //     }\n    // }, [])\n\n    useEffect(() => {\n        osc.current = new Tone.Oscillator({\n            // frequency: 32 * Math.pow(2, variables.i),\n            frequency: getNoteFrequency(variables?.i || 0),\n            type: \"sine\",\n            // type: \"square\",\n            volume: -60,\n            detune: Math.random() * 30 - 15,\n        }).toDestination().start()\n\n        return () => {\n            osc.current?.dispose()\n        }\n    }, [])\n    \n    const osc = useRef<Tone.Oscillator | null>(null)\n    useEffect(() => {\n        const clamp = (x: number) => Math.max(Math.min(x, 1), -1)\n\n        const loop = new Tone.Loop(time => {\n            // const exprEvalRes = evalast(lastValidAst.current, {time, t: time, sin: normalizedSin, tri: normalizedTriangle, sqr: normalizedSquare, stp: normalizedStep, inv: invert, ...variables})\n            const exprEvalRes = lastValidCompiled.current({time, t: time, sin: normalizedSin, tri: normalizedTriangle, sqr: normalizedSquare, stp: normalizedStep, inv: invert, ...variables})\n            resRef.current = typeof exprEvalRes === 'number' ? clamp(exprEvalRes) : 0 // evalast may return strings, functions, ...\n            // resRef.current = Math.sin(time) / 2 + 0.5\n\n            // if (resRef.current - prevRes.current > 0.95 && synth.current && volume) {\n            //     synth.current.triggerAttackRelease(getNote(variables?.i || 0), \"8n\", time, volume.current)\n            // }\n            // prevRes.current = resRef.current\n\n            if (isNaN(resRef.current) || !osc.current || !volume) return\n            const volumeTarget = resRef.current === 0 ? -Infinity : lerp(-60, lerp(-60, -40, volume.current), Math.abs(resRef.current))\n            \n            osc.current.volume.rampTo(volumeTarget, 0.06, time)\n            osc.current.type = resRef.current >= 0 ? 'sine' : 'square'\n            \n        }, \"0.03\").start(0);\n\n        return () => {\n            osc.current?.dispose()\n            loop.dispose()\n        }\n    }, [])\n\n    return { res: Math.abs(res), error: parseError.current, instrumentName: 'expsyn' }\n}\n\nexport default useExpressionWithSound","/**\n *\n *       * ******* *\n *       *         *\n *       *   .5    *\n *       *         *\n *       * ******* *\n *\n */\n\n//useAnimationFrame((time) => {setDimmer(state => (state + time / 1000) % 1)})\n\n// TODO multiple preset animations\n// TODO beat sync\n// TODO rounded corners\n// TODO expression evaluation\n// TODO saving expression as preset\n// TODO persisting presets\n// TODO live sync of presets / selection (fbase realtime db?)\n// TODO support 2x not just 2*x\n// TODO input bg on focus\n// TODO shared globals (exposed to users)\n// TODO graph display\n// TODO deterministic noise functions\n// TODO splittable squrs\n// TODO keyboard func ~ key.a / key('a') / variable for few special keys / gamepad\n// TODO ...\n\nimport React, { ReactElement, useState } from \"react\"\nimport EmptySqur from \"./EmptySqur\"\nimport ExpressionContent from \"./instruments/Expression/ExpressionContent\"\nimport SqurProps from \"./SqurProps\"\nimport useExpressionWithSound from \"./instruments/Expression/useExpressionWithSound\"\n\n// const COLOR = '#72dec2'\n// const COLOR_RGB = '114, 222, 194'\n// const COLOR_RGB = '255, 0, 255'\nconst COLOR_RGB = \"170, 187, 204\"\n\n// const com = (a: any[]) => a.map(e => e.toString()).join(',')\n\n// const dim = (val: number) => {\n//     const v = val * 255\n//     return {background: `rgb(${com([v, v, v])})`}\n// }\n\nconst trns = (a: number) => ({ background: `rgba(${COLOR_RGB}, ${a})` })\nconst black = (a: number) => ({ background: `rgba(0,0,0, ${a})` })\n\nfunction Squr({\n  init,\n  side = 100,\n  expression: expressionExternal,\n  setExpression: setExpressionExternal,\n  variables = {},\n  toggleInstrument,\n  contentComponent = ExpressionContent,\n  useExpressionHook = useExpressionWithSound,\n}: SqurProps): ReactElement {\n  const [expressionInternal, setExpressionInternal] = useState(init || \"0\")\n  const expression = expressionExternal ?? expressionInternal\n  const setExpression = setExpressionExternal ?? setExpressionInternal\n\n  const { res, error, instrumentName, extra } = useExpressionHook(expression, setExpression, variables)\n\n  const fontColor = res < 0.5 ? \"#abc\" : \"#444\"\n  const color = res > 0 ? trns(res) : black(-res)\n\n  const ContentComponent = contentComponent\n\n  const handleContextMenu: React.MouseEventHandler<HTMLDivElement> = (e) => {\n    e.preventDefault()\n    toggleInstrument()\n  }\n\n  return (\n    <EmptySqur color={color} side={side} onContextMenu={handleContextMenu}>\n      <ContentComponent\n        side={side}\n        expression={expression}\n        setExpression={setExpression}\n        res={res}\n        fontColor={fontColor}\n        variables={variables}\n        error={error}\n        instrumentName={instrumentName}\n        extra={extra}\n      />\n    </EmptySqur>\n  )\n}\n\nexport default Squr\n","import React, { ReactElement } from 'react'\nimport Button from '../../../Button/Button'\nimport ContentProps from './../../ContentProps'\n\nconst ACTIVE_COLOR = \"#abc\"\nconst INACTIVE_BG_COLOR = \"transparent\"\nconst INACTIVE_FG_COLOR = ACTIVE_COLOR\nconst ACTIVE_FG_COLOR = \"black\"\nconst INACTIVE_FG_WHENON_COLOR = \"rgba(0,0,0,0.1)\"\n\nfunction SequencerToggle({ res, value, onClick, side, active }: { res: number, value: number, onClick: () => void, side: string | number, active: boolean }) {\n    let label = '0'\n    if (value >= 0.5) label = '?'\n    if (value >= 1) label = '!'\n    \n    const bg = active ? ACTIVE_COLOR : INACTIVE_BG_COLOR\n    const inactiveFg = res > 0.5 ? INACTIVE_FG_WHENON_COLOR : INACTIVE_FG_COLOR\n    const fg = active ? ACTIVE_FG_COLOR : inactiveFg\n\n    return <Button onClick={onClick} style={{width: side, height: side, background: bg, color: fg, borderRadius: '100%'}}>{label}</Button>\n}\n\nfunction SequencerContent({res, expression, setExpression, side, extra}: ContentProps): ReactElement {\n    const currentStep = extra?.step || 0\n\n    // TODO share with usesequencer\n    const mappedSteps = expression.split(',').map(str => {\n        const val = +str\n        return isNaN(val) ? 0 : val\n    })\n\n    const steps = mappedSteps || [0]\n\n    const setStep = (stepIndex: number, value: number) => {\n        const updatedSteps = [...steps]\n        updatedSteps[stepIndex] = value\n        setExpression(updatedSteps.join(','))\n    }\n\n    const toggleStep = (stepIndex: number) => {\n        const step = steps[stepIndex]\n        setStep(stepIndex, (step + 0.5) % 1.5)\n    }\n\n    const toggleSide =`calc(${side} / 4 - 5px)`\n    const toggles = steps.map((step, index) => {\n        return <SequencerToggle res={res} active={currentStep === index} side={toggleSide} key={index} value={step} onClick={() => toggleStep(index)} />\n    })\n\n    return (\n        <div style={{textAlign: 'center'}}>\n            {toggles}\n        </div>\n    )\n}\n\nexport default SequencerContent\n","import { ReactElement } from \"react\"\nimport ContentProps from \"../ContentProps\"\nimport { ExpressionHookFunction } from '../types'\nimport ExpressionContent from \"./Expression/ExpressionContent\"\nimport useExpressionWithSound from \"./Expression/useExpressionWithSound\"\nimport SequencerContent from \"./Sequencer/SequencerContent\"\nimport useExpressionSequencer from \"./Sequencer/useExpressionSequencer\"\n\ntype Instrument = {\n    view: (props: ContentProps) => ReactElement,\n    logic: ExpressionHookFunction\n}\n\nconst INSTRUMENTS: { [name: string]: Instrument} = {\n    gridseq: {\n        view: SequencerContent,\n        logic: useExpressionSequencer\n    },\n    expsyn: {\n        view: ExpressionContent,\n        logic: useExpressionWithSound\n    }\n}\n\nexport { INSTRUMENTS }","import { ExpressionHookFunction } from \"../../types\";\nimport * as Tone from 'tone'\nimport { useEffect, useRef, useState } from \"react\";\nimport { getNote } from \"../../notes\";\n\n\nconst useExpressionSequencer: ExpressionHookFunction = (expression, setExpression, variables) => {\n    const steps = useRef<number[]>([0])\n    const [step, setStep] = useState(0)\n\n    useEffect(() => {\n        const mappedSteps = expression.split(',').map(str => {\n            const val = +str\n            return isNaN(val) ? 0 : val\n        })\n\n        steps.current = mappedSteps || [0]\n        if (steps.current.length < 16) {\n            setExpression('0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0')\n        }\n    }, [expression, setExpression])\n\n    const [res, setRes] = useState(0)\n\n    const synth = useRef<Tone.Synth | null>(null)\n    useEffect(() => {\n        synth.current = new Tone.Synth().toDestination()\n        synth.current.volume.rampTo(-30, 0)\n\n        const loopA = new Tone.Loop(time => {\n            const stepIndex = Math.round(time * 4) % steps.current.length\n            const currentStep = steps.current[stepIndex]\n            setStep(stepIndex)\n            \n            const playing = currentStep >= Math.random()\n\n            setRes(playing ? 1 : 0)\n            // if (playing) synth.current?.start(time).stop(\"+32n\");\n            if (playing) synth.current?.triggerAttackRelease(getNote(variables?.i || 0), \"8n\", time);\n        }, \"8n\").start(0);\n        \n        return () => {\n            synth.current?.dispose()\n            loopA.dispose()\n        }\n    }, [])\n\n    return { res, error: null, instrumentName: 'sequencer', extra: {step} }\n\n}\n\nexport default useExpressionSequencer","import React, { ReactElement, useEffect, useState } from \"react\";\nimport Squr from \"./Squr\";\n\nimport \"firebase/database\";\nimport { useDatabase, useDatabaseObjectData } from \"reactfire\";\nimport SqurProps from \"./SqurProps\";\nimport EmptySqur from \"./EmptySqur\";\nimport { INSTRUMENTS } from \"./instruments\";\n\ninterface SqurFirebaseProps\n  extends Omit<\n    SqurProps,\n    \"expression\" | \"setExpression\" | \"contentComponent\" | \"useExpressionHook\" | \"toggleInstrument\"\n  > {\n  path?: string;\n}\n\nconst DEFAULT_EXPRESSION = \"0\";\n\nfunction SqurFirebase({\n  side = 100,\n  path = \"/squr\",\n  ...rest\n}: SqurFirebaseProps): ReactElement {\n  const ref = useDatabase().ref(path);\n\n  const { data, status } = useDatabaseObjectData<{\n    expr: string;\n    instrument?: string;\n  }>(ref);\n\n  // TODO debounce\n  const setExpression = (newExpression: string) => {\n    setLocalExpression(newExpression);\n    ref.update({ expr: newExpression });\n  };\n\n  // Optimistic updates and fix for cursor jumping (https://github.com/facebook/react/issues/955)\n  const [localExpression, setLocalExpression] = useState<string | undefined>(\n    undefined\n  );\n  useEffect(() => {\n    if (status === \"success\") {\n      const expr = data.expr ?? DEFAULT_EXPRESSION;\n      if (expr !== localExpression) setLocalExpression(expr);\n    }\n  }, [status, data]);\n\n  if (localExpression === undefined || status !== \"success\") {\n    return (\n      <EmptySqur side={side} color={{ background: \"white\" }}>\n        {status}\n      </EmptySqur>\n    );\n  }\n\n  const instrumentName = data.instrument ?? \"expsyn\";\n  const { logic, view } = INSTRUMENTS[instrumentName] || INSTRUMENTS[\"expsyn\"];\n  const toggleInstrument = () => {\n    const instrument = instrumentName === \"expsyn\" ? \"gridseq\" : \"expsyn\";\n\n    ref.update({ instrument });\n  };\n\n  return (\n    <Squr\n      key={instrumentName}\n      toggleInstrument={toggleInstrument}\n      side={side}\n      expression={localExpression}\n      setExpression={setExpression}\n      contentComponent={view}\n      useExpressionHook={logic}\n      {...rest}\n    />\n  );\n}\n\nexport default SqurFirebase;\n","import React from 'react'\n\nconst TimeContext = React.createContext(0)\n\nexport { TimeContext }\n","import { useState } from \"react\"\nimport useAnimationFrame from \"./Squr/useAnimationFrame\"\n\n// TODO allow refing other times\n// TODO time controls (reffable, context)\nconst useTime = (init: number = 0) => {\n    const [time, setTime] = useState(init)\n  useAnimationFrame(time => setTime(ut => ut + time / 1000))\n\n  return time\n}\n\nexport default useTime","import React, { useState } from \"react\";\nimport { FirebaseAppProvider } from \"reactfire\";\nimport * as Tone from \"tone\";\nimport \"./App.css\";\nimport firebaseConfig from \"./firebaseConfig\";\nimport Help from \"./Help/Help\";\nimport Intro from \"./Intro/Intro\";\nimport ConfigContextProvider from \"./Squr/ConfigContextProvider\";\nimport SqurFirebase from \"./Squr/SqurFirebase\";\nimport { TimeContext } from \"./Squr/TimeContext\";\nimport useTime from \"./useTime\";\n\n// TODO make this also syncd\nconst SQURS_PER_ROW = 4;\nconst SQURS_PER_COL = SQURS_PER_ROW;\n\nconst SQURS = SQURS_PER_ROW * SQURS_PER_COL;\nconst SIDE = `${80 / SQURS_PER_ROW}vmin`;\n\nconst getXIndex = (index: number, perRow = SQURS_PER_ROW) => index % perRow;\nconst getYIndex = (index: number, perRow = SQURS_PER_ROW) =>\n  Math.round(index / perRow);\n\nconst makeSqurs = (count: number) => {\n  const a = new Array(count).fill(1);\n  return a.map((_v, index) => {\n    return (\n      <SqurFirebase\n        key={index}\n        side={SIDE}\n        path={`/squrs/${index}`}\n        variables={{\n          i: index,\n          i1: index + 1,\n          x: getXIndex(index),\n          x1: getXIndex(index) + 1,\n          y: getYIndex(index),\n          y1: getYIndex(index) + 1,\n        }}\n      />\n    );\n  });\n};\n\nconst dynamicFirebaseSqurs = makeSqurs(SQURS);\n\nfunction App() {\n  const time = useTime();\n  const [started, setStarted] = useState(false);\n\n  return (\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n      <ConfigContextProvider>\n        <TimeContext.Provider value={time}>\n          {/* TODO Redo with minimal grid based centering */}\n          {/* TODO gif animation credit */}\n          <div\n            style={{\n              display: \"flex\",\n              height: \"100vh\",\n              width: \"100vw\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            {started ? (\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: `repeat(${SQURS_PER_ROW}, ${SIDE})`,\n                  gap: \"2vmin\",\n                }}\n              >\n                <Help />\n                {dynamicFirebaseSqurs}\n              </div>\n            ) : (\n              <Intro\n                onClick={() => {\n                  setStarted(true);\n                  Tone.start();\n                  Tone.Transport.start();\n                }}\n              />\n            )}\n          </div>\n        </TimeContext.Provider>\n      </ConfigContextProvider>\n    </FirebaseAppProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/fonts/JetBrainsMono.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}